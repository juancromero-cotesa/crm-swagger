openapi: 3.0.0
info:
  title: Api CRM
  description: "Especificaciónes de la API pública de CRM.\n\n# Versión 2 parte pú\
    blica. \n***\n\nLos métodos estaran protegidos mediante el paso de un token vá\
    lido.\n\nLos métodos que puedan ser accedidos por aplicaciones de terceros estará\
    n protegidos por el paso de una api key que tendrá definidos los permisos correspondientes.\n\
    \nSe eliminan las descriciones de cambios de versiones anteriores a la 5, se pueden\
    \ consultar en las versiones previas\n\n\n\n### 0.5.0\n***\n\n### Contacto Campañ\
    a\nSe define el esquema CampaignContact\nSe añaden los métodos para la obtenció\
    n, creación y borrado masivo de contactos en una campaña\nSe añaden los métodos\
    \ para la obtención, edición y borrado de contactos , de manera individual, en\
    \ una campaña\n\n### CitizenCard\nSe añade la propiedad citizenId en tarjeta ciudadana\
    \ \n\n### 0.5.1\n***\nSe declara el esquema Survey que almacenará valoraciones\
    \ del ciudadano\n\n### Solicitudes\nSe depreca   /crmrequests/{crmRequestId}/bpsprocess\n\
    Añade el método POST   /crmrequests/{crmRequestId}/survey para almacenar la respuesta\
    \ a la valoración de la solicitud\nSe añade la propiedad survey a la solicitud\
    \ para almacenar la valoración del ciudadano a la atención recibida\nSe modifica\
    \ el método en el método /crmrequests/{crmRequestId}/situation la clase del objeto\
    \ a enviar en el post de CrmRequest a Situation\n\n### Person\nSe añade la propiedad\
    \ surveys para almacenar las valoraciones del ciudadano al servicio prestado por\
    \ el ayuntamiento\nAñade el método POST   /persons/survey para almacenar una nueva\
    \ respuesta de encuesta de valoración del servicio\n\n### 0.5.2\n***\n\n### Personas\n\
    \  se modifica el método /persons/survey/ a   /persons/survey/{personId} pasando\
    \ el id de la persona a la que establecer la encuesta\n  \n## 0.5.3\n***\n\n###\
    \ Auth\nSe define el método auth/thirdpartylogin para proporcionar login SSO a\
    \ terceros (ya implementado)\n\n### Comment\nSe agregan los campos tipo, codigo\
    \ y descripcion de la situacion a los comentarios de una solicitud y una interaccion\n\
    \n## 0.5.4\n***\n\n### Tipos de interacciones\n\nDefine la propiedad identificator\
    \ en el esquema de tipo de interacción\nDefine el método  /interactions/types/{identificator}\
    \ para obtener un tipo de interacción por su identificador\n\n## 0.5.5\n***\n\n\
    ### Personas\nSe añade el atributo que contiene la lista negra de tipos de interacciones\
    \ a no registrar en la persona\n\n### CensusType\nSe añade el atributo email que\
    \ guarda el email del usuario en el censo\n\n\n## 0.5.6\n\nCorrige la respuesta\
    \ de método  /interactions/types/{identificator} no es un array\n"
  contact:
    name: Cotesa
    url: https://cotesa.grupotecopy.es/
    email: juancromero@grupotecopy.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.5.6-PRIVATE
externalDocs:
  description: Especificación Api rest
  url: https://restfulapi.net/http-status-codes/
servers:
- url: "{servidor}/public/{version}"
  description: Servidor CRM
  variables:
    servidor:
      default: http://localhost:8080
      enum:
      - http://crmsantanderdes.grupotecopy.es/crmsantanderback
      - https://precrm.grupotecopy.es
    version:
      description: Versión de la api
      default: v1
      enum:
      - v1
      - v1.1
tags:
- name: Apikeys
  description: Gestión de Apikeys
- name: Aplicaciones externas
  description: Aplicaciones externas con acceso a los servicios públicos mediante
    Apikey
- name: Auditoría
  description: sistema de auditoría
- name: Autorizaciones
  description: Procesos de autorización.
- name: Dashboards
  description: Dashboards
- name: CustomForm
  description: Formularios Customizados.
- name: Estructura organizativa
  description: EStructura organizativa del ayuntamiento.
- name: Fuentes de datos
  description: Fuentes de datos para la realización de consultas sobre los datos de
    CRM
- name: Grupos
  description: Gestión de grupos de usuarios
- name: Idiomas
  description: Gestión de personas en el módulo de indentificación única. Identificación
    única de personas físicas y personas jurídicas
- name: Integraciones
  description: Gestión de integraciones por ETLs desde otros sistemas
- name: Interacciones
  description: Métodos para la incorporación de interacciones.
- name: Parametrización
  description: "Datos de parámetos de la aplicación a modo de datos maestros (tipo\
    \ documento, tipos de personas,...)"
- name: Personas
  description: Gestión de personas en el módulo de indentificación única. Identificación
    única de personas físicas y personas jurídicas
- name: Procesos de negocio
  description: Gestión de procesos de negocio de WSO2 BPS
- name: Segments
  description: Segmentos para categorización de personas por uso.
- name: Solicitudes
  description: Métodos para la incorporación de solicitudes.
- name: Tarjeta Ciudadana
  description: Métodos para la integración de la tarjeta ciudadana.
- name: Usuarios
  description: Gestión de usuarios en el módulo de indentificación única.
- name: Widgets
  description: Widgets gráficos e indicadores
- name: Dashboards de usuarios
  description: Configuración de dashboards de cada usuario
paths:
  /apikey:
    get:
      tags:
      - Apikeys
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKey'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Apikeys
      summary: update
      operationId: updateUsingPUT
      requestBody:
        description: apiKey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    post:
      tags:
      - Apikeys
      summary: save
      operationId: saveUsingPOST
      requestBody:
        description: apiKey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /apikey/{id}:
    get:
      tags:
      - Apikeys
      summary: findApiKeyById
      operationId: findApiKeyByIdUsingGET
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Apikeys
      summary: delete
      operationId: deleteUsingDELETE
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
  /audit/filter:
    post:
      tags:
      - Auditoría
      summary: Filtro sobre los registros de auditoría
      requestBody:
        description: filterAuditRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterAuditRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
  /audit/search:
    post:
      tags:
      - Auditoría
      description: método de búsqaueda mediante filtro en auditorías
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
  /auth/login:
    post:
      tags:
      - Autorizaciones
      summary: login de usuario
      description: "<h2>Login</h2> <p> Autentica un usuario mediante el uso de un\
        \ identificador admitido (nombre, email, id tarjeta ciudadana,...) y su contraseñ\
        a. Como respuesta proporciona un objeto con un token de acceso, su periodo\
        \ de vigencia y un token de refresco que permitirá obtener un nuevo token\
        \ cuando este haya caducado.<p> Las aplicaciones cliente deberán <strong>almacenar\
        \ los tokens de forma segura y eliminar tanto el token de acceso como el de\
        \ refresco cuando el usuario realice el logout</strong> </p> <p> El token\
        \ devuelto en formato JWT contendrá en el payload el id el usuario, el id\
        \ de la persona, id de la tarjeta ciudadana si se dispone de ella y el id\
        \ de la aplicación desde la que e hizo login obtenido desde el ApiKey</p>"
      externalDocs:
        url: https://auth0.com/docs/tokens/access-tokens
      requestBody:
        description: "Objeto para el login, permitirá hacer login mediante usuario,\
          \ teléfono, email o tarjeta ciudadana los cuales son excluyentes.  Si se\
          \ proporciona mas de uno devolverá error 400 en la petición"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: Login ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
  /auth/logout:
    description: Realiza en el servicio las operaciones necesarias en la desconexión
      de un usuario <p>Las aplicaciones cliente deberán <strong>eliminar tanto el
      token de acceso como el de refresco cuando el usuario realice el logout</strong></p>
    post:
      tags:
      - Autorizaciones
      summary: Realiza el logout de un usuario invalidando su token de acceso
      description: ""
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /auth/refreshToken:
    post:
      tags:
      - Autorizaciones
      summary: Refresca el token de autorización
      description: Obtiene un nuevo token de acceso a partir del token válido actual
        y el token de refresco
      externalDocs:
        description: Info sobre método de refresco de token
        url: https://auth0.com/docs/tokens/access-tokens/refresh-tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenResponse'
      responses:
        "200":
          description: Refresh ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "405":
          description: Invalid input
  /auth/authorize:
    post:
      tags:
      - Autorizaciones
      summary: Autoriza usuario autenticado por proveedor de confianza
      description: "<p>Autoriza en CRM un usuario que ya ha sido autenticado por alguno\
        \ de los métodos en los que se confía como certificado, dni electrónico y\
        \ LDAP</p> <ol>\n <li>El proceso autentica el usuario de forma segura a traves\
        \ del bus de integración y el bus solicita la autorización del usuario mediante\
        \ los datos identificados sin necesidad de contraseña.\n </li>\n<li>Si no\
        \ existe se crea el usuario y la persona asociada. </li> <li>\n  Se genera\
        \ el token del usuario y se retorna\n</li> </ol>"
      requestBody:
        description: "Objeto para el login en aplicación de terceros, permitirá hacer\
          \ login mediante usuario, teléfono, email o tarjeta ciudadana los cuales\
          \ son excluyentes y deberá identificar la aplicación a la que se desea acceder.\
          \  Si se proporciona mas de uno devolverá error 400 en la petición"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginTrusted'
        required: true
      responses:
        "200":
          description: Login ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - ApiKey: []
  /auth/fid/login:
    post:
      tags:
      - Autorizaciones
      summary: login federado
      description: "<h1>Login Federado</h1>  <p>Autentica un usuario para el acceso\
        \ a una aplicación de terceros mediante el uso de un identificador admitido\
        \ (nombre, email, id tarjeta ciudadana,...) y su contraseña CRM. El proceso\
        \ identifica el usuario en CRM y busca una autorización previa de acceso a\
        \ la aplicación de terceros..</p> <ol>\n <li>El proceso identifica el usuario\
        \ mediante sus credenciales CRM y busca una autorización previa de acceso\
        \ a la aplicación.</li>\n<li>Si existe autorización previa se redirige al\
        \ acceso de la aplicación con el código de autorización almacenado lo que\
        \ proporcionará acceso a esta son necesidad de realizar una nueva identificació\
        n.</li> <li> Si no existe se redirige al componente C11 pasando como pará\
        metros la aplicación a autorizar y el id del usuario. </li> <li> El bus de\
        \ integración redirige al login de la aplicación solicitada. Esta tras un\
        \ login correcto realiza nueva llamada al bus adjuntando los parámetros del\
        \ id de usuario, identificador de aplicación y código de autorización obtenido\
        \ en el login. </li> <li> El bus de integración realiza llamada a CRM al mé\
        todo de almacenamiento de identificación federada, donde CRM almacenará la\
        \ información para posteriores solicitudes de acceso a la aplicación. </li>\
        \ </ol>"
      externalDocs:
        url: https://en.wikipedia.org/wiki/Federated_identity
      requestBody:
        description: "Objeto para el login en aplicación de terceros, permitirá hacer\
          \ login mediante usuario, teléfono, email o tarjeta ciudadana los cuales\
          \ son excluyentes y deberá identificar la aplicación a la que se desea acceder.\
          \  Si se proporciona mas de uno devolverá error 400 en la petición"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginFid'
        required: true
      responses:
        "200":
          description: Login ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
  /auth/fid/store:
    post:
      tags:
      - Autorizaciones
      summary: Almacena identificación federada
      description: Almacena una identificación federada asociada a un usuario y una
        aplicación. Cuando en posteriores ocasiones el usuario intente acceder a la
        aplicación podrá usar el código de autorización reconocido por la app para
        el acceso.
      requestBody:
        description: Objeto con la identificación federada a almacenar.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fid'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: true
      security:
      - ApiKey: []
  /auth/fid/revoque:
    post:
      tags:
      - Autorizaciones
      summary: Revoca identificación federada almacenada
      description: Revoca una identificación federada obtenida previamente estableciéndola
        como no habilitada.
      requestBody:
        description: Objeto con la identificación federada a eliminar.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fid'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: true
      security:
      - ApiKey: []
  /auth/password/change:
    post:
      tags:
      - Autorizaciones
      summary: Cambio de contraseña
      description: "Modifica la contraseña del usuario pasado por body. Si el usuario\
        \ recibido no es el propietario del token, deberá tener los permisos necesarios."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /auth/password/lost:
    post:
      tags:
      - Autorizaciones
      summary: Contraseña olvidada
      description: "Envía notificación al usuario para la recuperación de la contraseñ\
        a mediante el paso del email o el id de su tarjeta ciudadana. Si se pasa el\
        \ email se envía el enlace de recuperación sin realizar mas comprobaciones.\
        \ Si no se recibe email y se recibe el id de tarjeta, se obtendrá el email\
        \ asociado al propietario. Si no se encuentra email asociado o no se localiza\
        \ el usuario con la tarjeta se retorna error 400"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
  /auth/password/recover:
    post:
      tags:
      - Autorizaciones
      summary: Establece la nueva contraseña para el usuario asociado al token de
        recuperación
      description: "Tras una solicitud de restauración de contraseña, se ha enviado\
        \ al usuario un enlace con un token de recuperación asociado. Mediante el\
        \ uso de este token se podrá enviar una nueva contraseña que se establecerá\
        \ como contraseña del usuario asociado al token de recuperación."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoverPasswordRequest'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
  /auth/thirdpartylogin/{app}:
    get:
      tags:
      - Apikeys
      parameters:
      - name: app
        in: path
        description: identificador de la app a la que hacer el login de tercero
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBdXRoZW50aWNhdGlvbiIsImF1ZCI6IkM3VUEiLCJuYW1lIjoibWRhdmlsYSIsImlzcyI6IkM4IiwiZXhwIjoxNjQzMjQ0ODg3LCJpYXQiOjE2NDMyMTYwODd9.GZNlqON5zYj1yhPy0zJTYj-IkowLYbKrOo_j_qwM1Kc
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
  /businessprocess:
    get:
      tags:
      - Procesos de negocio
      summary: Obtiene definiciones de procesos de negocio
      description: Obtiene todas las definiciones de procesos de negocio (/applications/3/process-definitionscrmrsurve)
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessDefinition'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /businessprocess/{businessprocessId}:
    get:
      tags:
      - Procesos de negocio
      summary: Obtiene proceso de negocio
      description: "Obtiene la definición de un proceso de negocio por su id  (/applications/3/process-definitions/{id})"
      parameters:
      - name: businessprocessId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProcessDefinition'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /businessprocess/{businessprocessId}/indicators:
    description: obtiene los indicadores de un proceso de negocio o de una instancia
      concreta si se añade el parámetro get process-instance-id. (/applications/3/indicators
      + parámetros GET)
    get:
      tags:
      - Procesos de negocio
      summary: Obtiene las tareas definidas de un proceso de negocio
      description: Obtiene todas las tareas definidas de un proceso de negocio
      parameters:
      - name: businessprocessId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: process-instance-id
        in: query
        description: retorna los indicadores de la instancia de proceso
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: include-alarm-list
        in: query
        description: incluye la lista de alarmas en la respuesta
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessIndicator'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /businessprocess/{businessprocessId}/instances:
    description: "Obtiene instancias de un proceso (/applications/3/process-definitions/{id}/process-instances)"
    get:
      tags:
      - Procesos de negocio
      summary: Obtiene instancias de proceso de negocio
      description: Obtiene todas las instancias de un proceso de negocio
      parameters:
      - name: businessprocessId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessInstance'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /businessprocess/{businessprocessId}/taskdefinitions:
    get:
      tags:
      - Procesos de negocio
      summary: Obtiene la definición de tareas de un proceso de negocio
      parameters:
      - name: businessprocessId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessTaskDefinition'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /businessprocess/instances/{instanceId}:
    get:
      tags:
      - Procesos de negocio
      summary: Detalle de una instancia de proceso
      description: "Detalle de instancia de proceso (/applications/3/process-definitions/{businessprocessId}/process-instances/{businessprocessId})"
      parameters:
      - name: instanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: finished
        in: query
        description: "si es true, retorna sólo las instancias finalizadas"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessInstance'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /businessprocess/instances/{processInstanceId}/historic-activities:
    summary: Retorna el array de actividades actuales de una instancia de proceso
    description: Retorna el array de actividades actuales de una instancia de proceso
      actual http://sibloqprocessdes.grupotecopy.es/sibloqprocessback/applications/3/search/historic-activities-instances
    get:
      tags:
      - Procesos de negocio
      summary: Obtiene la definición de tareas de un proceso de negocio
      description: definición de tareas de un proceso de negocio (/applications/3/tasks//task-definitions-extended)
      parameters:
      - name: processInstanceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessTaskActivity'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /check-session:
    post:
      tags:
      - Autorizaciones
      summary: checksession
      operationId: checksessionUsingPOST
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /campaign:
    get:
      tags:
      - Campañas
      description: obtiene las campañas a las que tiene permisos de acceso el usuario
        segun el permiso de campañas en casa unidad organizativa
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
    post:
      tags:
      - Campañas
      summary: save
      requestBody:
        description: apiKey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /campaign/{id}:
    get:
      tags:
      - Campañas
      summary: findApiKeyById
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Campañas
      summary: update
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Actualiza una campaña
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    post:
      tags:
      - Campañas
      description: "Ejecuta la carga de contactos de la campaña, requiere que el usaurio\
        \ tenga permisos de ¿ publicación ? de campañas"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Campañas
      summary: Elmimina campaña
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
  /campaign/{id}/contacts:
    get:
      tags:
      - Campañas
      description: Obtiene los contactos asociados a una campaña
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampaignContact'
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
    post:
      tags:
      - Campañas
      description: "Ejecuta la carga de contactos de la campaña a partir de un fichero\
        \ excel o csv, requiere que el usaurio tenga permisos de ¿ publicación ? de\
        \ campañas"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/id_contacts_body'
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Campañas
      summary: Elimina contactos de una campaña
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
  /campaign/contact/{contactId}:
    get:
      tags:
      - Campañas
      summary: Obtiene un contacto de una campaña
      parameters:
      - name: contactId
        in: path
        description: contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignContact'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Campañas
      summary: Actualiza el contacto de una campaña
      parameters:
      - name: contactId
        in: path
        description: contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Actualiza un contacto de una campaña
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignContact'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Campañas
      summary: Elmimina un contacto de una campaña
      parameters:
      - name: contactId
        in: path
        description: contact id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
  /externalapps:
    get:
      tags:
      - Aplicaciones externas
      summary: Obtiene aplicaciones externas
      description: Obtiene todas las aplicaciones externas con acceso a la aplicación
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalAplication'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Aplicaciones externas
      summary: Crea aplicación externa
      description: Crea una nueva aplicación externa con acceso a la aplicación
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAplication'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAplication'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /externalapps/{aplicationId}:
    get:
      tags:
      - Aplicaciones externas
      summary: Obtiene aplicación externa
      description: Obtiene una aplicación externa por su id
      parameters:
      - name: aplicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAplication'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    put:
      tags:
      - Aplicaciones externas
      summary: actualiza aplicación externa
      description: Actualiza un registro de aplicación externa
      parameters:
      - name: aplicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAplication'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    delete:
      tags:
      - Aplicaciones externas
      summary: Elimina aplicación externa
      description: Elimina un registro de aplicación externa
      parameters:
      - name: aplicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /crmrequests:
    get:
      tags:
      - Solicitudes
      summary: findAll
      operationId: findAllUsingGET
      parameters:
      - name: page
        in: query
        description: page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortDir
        in: query
        description: sortDir
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
    put:
      tags:
      - Solicitudes
      summary: putCrmRequestById
      operationId: putCrmRequestByIdUsingPUT
      requestBody:
        description: crmRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmRequest'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
    post:
      tags:
      - Solicitudes
      summary: postCrmRequest
      operationId: postCrmRequestUsingPOST
      requestBody:
        description: crmRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmRequest'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/active:
    get:
      tags:
      - Solicitudes
      summary: findByCrmRequestType
      operationId: findByCrmRequestTypeUsingGET
      parameters:
      - name: active
        in: query
        description: active
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortDir
        in: query
        description: sortDir
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/agent/{idUser}:
    get:
      tags:
      - Solicitudes
      summary: findByIdUserAgent
      operationId: findByIdUserAgentUsingGET
      parameters:
      - name: idUser
        in: path
        description: idUser
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortDir
        in: query
        description: sortDir
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/citizen:
    get:
      tags:
      - Solicitudes
      summary: Devuelve las todas las Solicitudes del ciudadano (Paginado)
      operationId: findPaginateByIdPersonUsingGET
      parameters:
      - name: fieldSort
        in: query
        description: Campo por el que se ordena
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          default: createDate
      - name: idPerson
        in: query
        description: Id Ciudadano
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Página(valor por defecto 0)
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        description: Tamaño de la paginación (valor por defecto 10)
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortDir
        in: query
        description: "Ordenación (ASC = 1, DESC = -1)"
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/filter:
    get:
      tags:
      - Solicitudes
      summary: Filtro de solicitudes (Paginado)
      operationId: filterInteractionsUsingGET
      parameters:
      - name: active
        in: query
        description: Filtro para indicar si las solicitudes están finalizadas o no
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: dateFrom
        in: query
        description: Fecha desde la que se quiere filtrar yyyy-mm-dd
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: dateTo
        in: query
        description: Fecha hasta la que se quiere filtrar yyyy-mm-dd
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: idPerson
        in: query
        description: Id Ciudadano
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: interactionOrigenId
        in: query
        description: Id de la interacción de origen de la solicitud
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Página(valor por defecto 0)
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: requestType
        in: query
        description: Identificador del tipo de la solicitud
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: size
        in: query
        description: Tamaño de la paginación (valor por defecto 10)
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortDir
        in: query
        description: "Ordenación (ASC = 1, DESC = -1)"
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: sortField
        in: query
        description: Campo de ordenación
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
          default: createField
      - name: userNameAgent
        in: query
        description: Username del usuario que gestiona la solicitud
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      - name: userNameOwner
        in: query
        description: Username del usuario que realiza la solicitud
        required: false
        allowEmptyValue: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/owner/{idUser}:
    get:
      tags:
      - Solicitudes
      summary: findByIdUserOwner
      operationId: findByIdUserOwnerUsingGET
      parameters:
      - name: idUser
        in: path
        description: idUser
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortDir
        in: query
        description: sortDir
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/search:
    post:
      tags:
      - Solicitudes
      summary: Servicio de búsqueda de solicitudes
      operationId: searchUsingPOST_1
      requestBody:
        description: filterRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/situations/{crmRequestId}:
    get:
      tags:
      - Solicitudes
      summary: findSituationsByCrmRequestId
      operationId: findSituationsByCrmRequestIdUsingGET
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortDir
        in: query
        description: sortDir
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/type/{identificator}:
    get:
      tags:
      - Solicitudes
      summary: findByCrmRequestType
      operationId: findByCrmRequestTypeUsingGET_1
      parameters:
      - name: identificator
        in: path
        description: identificator
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortDir
        in: query
        description: sortDir
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/types:
    get:
      tags:
      - Solicitudes
      summary: getAllTypes
      operationId: getAllTypesUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrmRequestType'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
    put:
      tags:
      - Solicitudes
      summary: putType
      operationId: putTypeUsingPUT
      requestBody:
        description: crmRequestType
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmRequestType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmRequestType'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
    post:
      tags:
      - Solicitudes
      summary: postType
      operationId: postTypeUsingPOST
      requestBody:
        description: crmRequestType
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmRequestType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmRequestType'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/types/{idCrmRequestType}:
    get:
      tags:
      - Solicitudes
      summary: findTypeById
      operationId: findTypeByIdUsingGET
      parameters:
      - name: idCrmRequestType
        in: path
        description: idCrmRequestType
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmRequestType'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
    delete:
      tags:
      - Solicitudes
      summary: deleteById
      operationId: deleteByIdUsingDELETE
      parameters:
      - name: idCrmRequestType
        in: path
        description: idCrmRequestType
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/useragents:
    get:
      tags:
      - Solicitudes
      summary: getUserAgents
      operationId: getUserAgentsUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/{crmRequestId}:
    get:
      tags:
      - Solicitudes
      summary: getCrmRequestById
      operationId: getCrmRequestByIdUsingGET
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmRequest'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
    delete:
      tags:
      - Solicitudes
      summary: deleteCrmRequestById
      operationId: deleteCrmRequestByIdUsingDELETE
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/{crmRequestId}/situation:
    post:
      tags:
      - Solicitudes
      summary: addSituationByIdCrmRequest
      operationId: addSituationByIdCrmRequestUsingPOST
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: crmRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Situation'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/{crmRequestId}/bpsprocess:
    get:
      tags:
      - Solicitudes
      summary: findBpsProcessInstancesByIdCrmRequest
      operationId: findBpsProcessInstancesByIdCrmRequestUsingGET
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessProcessInstance'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/{crmRequestId}/notes:
    get:
      tags:
      - Solicitudes
      summary: findNotesByIdCrmRequest
      operationId: findNotesByIdCrmRequestUsingGET
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
    post:
      tags:
      - Solicitudes
      summary: addNotesByIdCrmRequest
      operationId: addNotesByIdCrmRequestUsingPOST
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: crmRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /crmrequests/{crmRequestId}/survey:
    post:
      tags:
      - Solicitudes
      parameters:
      - name: crmRequestId
        in: path
        description: crmRequestId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: token
        in: query
        description: token proveniente del enlace generado para la encuesta
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: email al que se envió que recibió el enlace para solicitar la
          votación
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Establece encuesta de valoración de la solicitud. Es un método
          público pero valida los parámetros token e email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "499":
          description: parámetros token o email recibidos no válidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
      deprecated: false
  /customForm:
    get:
      tags:
      - CustomForms
      summary: Obtiene formularios.
      description: Obtiene formularios customizados
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomForm'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    put:
      tags:
      - CustomForms
      summary: Actualiza un formulario
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomForm'
        required: true
      responses:
        "201":
          description: La petición ha sido completada y ha resultado en la creación
            de un nuevo recurso.
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - CustomForms
      summary: Alta de formulario
      description: Crea el formulario customizado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomForm'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomForm'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /customform/name/{name}:
    get:
      tags:
      - CustomForms
      description: Obtiene un custom form por su nombre
      parameters:
      - name: name
        in: path
        description: name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomForm'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /customform/type/{type}:
    get:
      tags:
      - CustomForms
      summary: findByType
      operationId: findByTypeUsingGET
      parameters:
      - name: type
        in: path
        description: type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            'application/json:':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomForm'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /customform/{customFormId}:
    get:
      tags:
      - CustomForms
      summary: Obtiene un customform por su ID
      parameters:
      - name: customFormId
        in: path
        description: id del customform
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomForm'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
    delete:
      tags:
      - CustomForms
      summary: Elimina el customform indicado en el path
      parameters:
      - name: customFormId
        in: path
        description: code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /faqs:
    get:
      tags:
      - Faqs
      summary: Obtiene lista de faqs
      description: Obtiene lista de faqs
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faq'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Faqs
      summary: postType
      requestBody:
        description: Crea una Faq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faq'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faq'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /faqs/{faqId}:
    get:
      tags:
      - Faqs
      summary: obtiene una faq
      parameters:
      - name: faqId
        in: path
        description: Id de faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "200":
          description: OK
          content:
            'application/json:':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faq'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Faqs
      summary: Actualiza una faq
      parameters:
      - name: faqId
        in: path
        description: Id de faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      requestBody:
        description: actualiza una faq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faq'
        required: true
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Faqs
      summary: Actualiza una faq
      parameters:
      - name: faqId
        in: path
        description: Id de faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
  /faqs/{faqId}/name:
    put:
      tags:
      - Faqs
      summary: Actualiza el nombre y descricpción de una faq
      parameters:
      - name: faqId
        in: path
        description: Id de faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      requestBody:
        description: actualiza nombre y desc de una faq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaqNameUpdateRequest'
        required: true
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
  /faqs/{faqId}/answers:
    post:
      tags:
      - Faqs
      summary: Nueva respuesta a FAQ
      parameters:
      - name: faqId
        in: path
        description: Id de faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      requestBody:
        description: añade una respuesta a la faq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaqAnswer'
        required: true
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
  /faqs/{faqId}/answers/{answerId}:
    put:
      tags:
      - Faqs
      summary: Actualiza una faq
      parameters:
      - name: faqId
        in: path
        description: Id de faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      - name: answerId
        in: path
        description: Id de respuesta de la faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      requestBody:
        description: actualiza el título y descripción de una faq
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaqAnswer'
        required: true
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Faqs
      summary: elimina la respuesta de la faq
      parameters:
      - name: faqId
        in: path
        description: Id de faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      - name: answerId
        in: path
        description: Id de respuesta de la faq a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
  /faqs/files:
    get:
      tags:
      - Faqs
      description: Obtiene todos los archivos de faqFile del sistema
      responses:
        "200":
          description: OK
          content:
            'application/json:':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FaqFile'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
    post:
      tags:
      - Faqs
      description: Carga un archivo con su nombre y descripción creando el faqFile
        asociado
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/faqs_files_body'
      responses:
        "200":
          description: OK
          content:
            'application/json:':
              schema:
                $ref: '#/components/schemas/FaqFile'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
  /faqs/files/{faqFileId}:
    get:
      tags:
      - Faqs
      description: Descarga el archivo asociado a un  faqFile
      parameters:
      - name: faqFileId
        in: path
        description: identificador del archivo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: retorna archivo en el body como un stream
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
    delete:
      tags:
      - Faqs
      description: Elimina un faqFile y su archivo asociado
      parameters:
      - name: faqFileId
        in: path
        description: identificador del archivo
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
  /groups:
    get:
      tags:
      - Grupos
      summary: Obtiene lista de grupos
      description: Obtiene todos los grupos
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersGroup'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Grupos
      summary: Crear un nuevo grupo de usuarios
      description: Gera una nuevo grupo de usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersGroup'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGroup'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /groups/{id}:
    get:
      tags:
      - Grupos
      summary: Obtiene un grupo de usuarios
      description: Obtiene un grupo de usuarios
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGroup'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    put:
      tags:
      - Grupos
      summary: Actualiza un grupo
      description: Actualiza un grupo de usuarios
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersGroup'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
    delete:
      tags:
      - Grupos
      summary: Elimina un grupo de usuarios
      description: Elimina un grupo de usuarios.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /datasource:
    get:
      tags:
      - Fuentes de datos
      summary: En CRM se podrá definir una fuente de datos que permita seleccionar
        datos de una colección y definir un metodo de agregación
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataSource'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
    post:
      tags:
      - Fuentes de datos
      requestBody:
        description: dataSource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /datasource/collectionsfields/{collection}:
    get:
      tags:
      - Fuentes de datos
      description: ampliar informacion
      parameters:
      - name: collection
        in: path
        description: collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /datasource/collectionsnames:
    get:
      tags:
      - Fuentes de datos
      summary: getCollectionsNames
      operationId: getCollectionsNamesUsingGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionName'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /datasource/run:
    post:
      tags:
      - Fuentes de datos
      summary: Ejecuta y devuelve los datos de una fuente de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
  /datasource/run/{datasourceId}:
    post:
      tags:
      - Fuentes de datos
      summary: Ejecuta una fuente de datos por su Id
      parameters:
      - name: datasourceId
        in: path
        description: id de la fuente de datos
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /datasource/{dataSourceId}:
    get:
      tags:
      - Fuentes de datos
      description: obtiene una fuente de datos mediante su id
      parameters:
      - name: dataSourceId
        in: path
        description: datasourceId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Fuentes de datos
      summary: Actualiza una fuente de datos
      parameters:
      - name: dataSourceId
        in: path
        description: datasourceId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: dataSource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Fuentes de datos
      description: Elimina una fuente de datos
      parameters:
      - name: dataSourceId
        in: path
        description: datasourceId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
  /integrations:
    get:
      tags:
      - Integraciones
      summary: Obtiene el catálogo de integraciones
      description: Obtiene todas las integraciones sin paginar
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Integration'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Integraciones
      summary: Nueva configuración de integración
      description: Crea una nueva configuración de integración
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /integrations/{integrationId}:
    get:
      tags:
      - Integraciones
      summary: Obtiene una integración
      description: Obtiene una integración externa por su id
      parameters:
      - name: integrationId
        in: path
        description: nombre de la integración (id)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    put:
      tags:
      - Integraciones
      summary: Actualiza integración
      description: Actualiza una configuración de integración
      parameters:
      - name: integrationId
        in: path
        description: nombre de la integración (id)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    delete:
      tags:
      - Integraciones
      summary: Elimina integración
      description: Elimina una configuración de integración
      parameters:
      - name: integrationId
        in: path
        description: nombre de la integración (id)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /integrations/{integrationId}/data:
    get:
      tags:
      - Integraciones
      summary: Obtiene los datos de una integración
      description: Obtiene los todos los datos de una integración externa por su id
      parameters:
      - name: integrationId
        in: path
        description: nombre de la integración (id)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyValue'
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Integraciones
      summary: Carga datos de de una integración
      description: "Realiza una carga de datos de integración\n***\nPor defecto inserta\
        \ todos los registros, este comportamiento se puede cambiar con el parámetro\
        \ mode.\n\nDeberá realizar las siguientes comprobaciones en los datos a importar\n\
        - Llega en el atributo integrationName con el nombre de la integración y esta\
        \ existe\n- Llegan los valores definidos en la integración comoperson claves\
        \ (key)\n\nPara cada registro de importación deberá anotar a cada persona\
        \ en su propiedad integrations que es un array\n- El nombre de la importació\
        n\n- la fecha de importación\n\nPara acceder a la persona se usará la relació\
        n definida en la integración\n"
      parameters:
      - name: integrationId
        in: path
        description: nombre de la integración (id)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mode
        in: query
        description: "Modo de carga de los datos de integración, pueden ser\n- reset\
          \ - Elimina el contenido actual y carga el nuevo\n- upsert - Inserta o actualiza\
          \ los datos por la clave especificada\n- insert - Inserta todo el contenido\n"
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyValue'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    delete:
      tags:
      - Integraciones
      summary: Elimina todos los datos de una  integración
      description: Elimina los datos de una integración realizada
      parameters:
      - name: integrationId
        in: path
        description: nombre de la integración (id)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /interactions:
    get:
      tags:
      - Interacciones
      parameters:
      - name: page
        in: query
        description: page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        description: size
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sortDir
        in: query
        description: sortDir
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: true
      security:
      - ApiKey: []
      - BearerToken: []
    post:
      tags:
      - Interacciones
      summary: Servicio de registro de interacción.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interaction'
        required: true
      responses:
        "201":
          description: Interacción creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - ApiKey: []
      - BearerToken: []
  /interactions/{id}:
    get:
      tags:
      - Interacciones
      summary: Obtención de ua interacción.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
    put:
      tags:
      - Interacciones
      summary: modifica una interacción. No deberá modificar situaciones ni comentarios
        que se actualizan por otro endpoint
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interaction'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
    delete:
      tags:
      - Interacciones
      summary: Elimina una interacción.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No content
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /interactions/{id}/situation:
    post:
      tags:
      - Interacciones
      summary: Añade una nueva situación a la interacción
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Situation'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Situation'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /interactions/{id}/comment:
    description: "añade comentario a la interaccion, no se guarda con el objeto global\
      \ de interaccion para evitar que un usuario con permisos pueda modificar comentarios\
      \ anteriores"
    post:
      tags:
      - Interacciones
      summary: Añade una nueva situación a la interacción. No se guarda con el objeto
        global de interaccion para evitar que un usuario con permisos pueda modificar
        comentarios anteriores
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interaction'
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /interactions/last/{personId}:
    get:
      tags:
      - Interacciones
      summary: Obtención de últimas 10 interacciones de una persona.
      parameters:
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interaction'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /interactions/upload:
    post:
      tags:
      - Interacciones
      summary: Carga por lotes de interacciones.
      description: Recibe un archivo Json con array de interacciones y realiza su
        carga
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: object
              format: binary
      responses:
        "202":
          description: Accepted
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - ApiKey: []
  /interactions/types:
    get:
      tags:
      - Interacciones
      summary: Obtiene tipos de interacciones.
      description: Obtiene la relación completa de tipos de interacciones
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InteractionType'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - ApiKey: []
  /interactions/types/{identificator}:
    get:
      tags:
      - Interacciones
      summary: Obtien tipo de interaccion por identificador.
      description: Obtiene el tipo de interacción por su identificador corto
      parameters:
      - name: identificator
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InteractionType'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - ApiKey: []
  /interactions/search:
    post:
      tags:
      - Interacciones
      summary: búsqueda de interacciones
      description: Ejecuta una búsqueda sobre la coleccion de interacciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /languages:
    get:
      tags:
      - Idiomas
      summary: Obtiene lista de idiomas
      description: Obtiene todos los idiomas disponibles (sin sus claves)
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /languages/{code}:
    get:
      tags:
      - Idiomas
      summary: Obtiene un idioma
      description: Obtiene un idioma por su código con sus claves
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageExtended'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    put:
      tags:
      - Idiomas
      summary: Actualiza un idioma
      description: Actualiza un idioma con sus claves
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageExtended'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
    post:
      tags:
      - Idiomas
      summary: Crear un nuevo idioma
      description: Crea un nuevo idioma a partir del idioma recibido por párametro
        con el nombre y  código recibidos en el body
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageExtended'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    delete:
      tags:
      - Idiomas
      summary: Elimina un idioma
      description: Elimina un idioma y todas las claves asociadas.
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /languages/literals/{code}:
    get:
      tags:
      - Idiomas
      summary: Obtiene literales de un idioma para ngx-translate
      parameters:
      - name: code
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerToken: []
  /organization:
    get:
      tags:
      - Estructura organizativa
      summary: Obtiene estructura organizativa
      description: Obtiene la estructura de la organización completa como unidades
        organizativas anidadas
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnit'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
      - ApiKey: []
    post:
      tags:
      - Estructura organizativa
      summary: Crear una estructura organizativa
      description: "Crea una estructura de la organización. Si se incluyen estructuras\
        \ hijas, estas deben de existir en el sistema, si no existen se devolverá\
        \ un error 400"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationalUnit'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnit'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /organization/{ouId}:
    get:
      tags:
      - Estructura organizativa
      summary: Obtiene rama de una estructura organizativa
      description: Obtiene una rama de la estructura de la organización desde un nodo
        y todos sus descendientes.
      parameters:
      - name: ouId
        in: path
        description: ID de la estructura organizativa
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnit'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
    put:
      tags:
      - Estructura organizativa
      summary: Actualiza una estructura organizativa
      description: Actualiza la estructura organizativa.
      parameters:
      - name: ouId
        in: path
        description: ID de la estructura organizativa
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationalUnit'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
    delete:
      tags:
      - Estructura organizativa
      summary: Elimina una estructura organizativa
      description: Elimina una estructura organizativa si no tiene hijos.
      parameters:
      - name: ouId
        in: path
        description: ID de la estructura organizativa
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: forceDelete
        in: query
        description: Indica si se elimina la estructura y se eliminan las unidades
          organizativas hijas
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /organization/childs/{ouId}:
    get:
      tags:
      - Estructura organizativa
      summary: Obtiene una las estructuras organizativas hijas directas de la indicada.
      description: Obtiene las estructuras organizativas hijas de un nodo
      parameters:
      - name: ouId
        in: path
        description: ID de la estrcutura organizativa
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnit'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
      - ApiKey: []
  /organization/parents:
    get:
      tags:
      - Estructura organizativa
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationalUnit'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
      - ApiKey: []
  /organization/logo/{ouId}:
    get:
      tags:
      - Personas
      summary: retorna el avatar de una persona
      parameters:
      - name: ouId
        in: path
        description: id de unidad organizativa
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
  /persons:
    post:
      tags:
      - Personas
      summary: Crear persona
      description: "Crea una nueva una persona, realizará las comprobaciones necesarias\
        \ para no crear personas con identificadores duplicados (DNI, NIF, NIE)."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - ApiKey: []
  /persons/{personId}:
    get:
      tags:
      - Personas
      summary: Obtener persona
      description: Retorna una única persona por su id
      parameters:
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "400":
          description: Invalid Path ID
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
    put:
      tags:
      - Personas
      summary: Modificación de persona (Creación si no existe)
      description: "Actualiza la persona por su id con la persona recibida en body,\
        \ si no existe el recurso"
      parameters:
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PersonRequest'
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "204":
          description: "No content, upadate OK"
        "401":
          description: Invalid Path ID
        "404":
          description: Resource Not found
        "405":
          description: Invalid input
      security:
      - BearerToken: []
      - ApiKey: []
    delete:
      tags:
      - Personas
      summary: Eliminar persona
      description: Elimina la persona identificada en el path
      parameters:
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Marca la persona como eliminada y retorna la persona modificada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
    patch:
      tags:
      - Personas
      summary: Actualiza la persona con la operación recibida
      description: Realiza la actualización de una persona. Permite modificar cualquiera
        de sus propiedades.
      parameters:
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Operación de actualización parcial sobre persona.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchOperation'
            example:
              op: replace
              path: identificationDoc
              value: 00000000J
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - ApiKey: []
  /persons/{personId}/integration/{integrationId}:
    get:
      tags:
      - Personas
      summary: retorna lso datos de una imortación para la pernona
      parameters:
      - name: integrationId
        in: path
        description: Id (nombre de la integración)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: string
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
  /persons/card/{sgtcId}:
    get:
      tags:
      - Personas
      summary: Obtiene una persona por su tarjeta ciudadana
      description: Retorna una única persona
      parameters:
      - name: sgtcId
        in: path
        description: ID de la tarjeta ciudadana
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
  /persons/email/{email}:
    get:
      tags:
      - Personas
      summary: Obtiene una persona por su email
      description: Retorna una única persona mediante el email con el que se registró
      parameters:
      - name: email
        in: path
        description: Dirección de email
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
  /persons/filter:
    post:
      tags:
      - Personas
      summary: Servicio de búsqueda de personas
      description: Realiza una búsqueda de personas con los parámetros recibidos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: true
      security:
      - BearerToken: []
      - ApiKey: []
  /persons/search:
    post:
      tags:
      - Personas
      description: método de búsqueda mediante filtro en personas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      deprecated: false
      security:
      - BearerToken: []
  /persons/personContact:
    post:
      tags:
      - Personas
      description: método para cargar un contacto con una persona en el componente
        7. Permite lanzar un mensaje al contacto mediante cualquier método de contacto
        disponible en el C7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonContact'
      responses:
        "204":
          description: No Content
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "450":
          description: Error en la carga del contacto
      deprecated: false
      security:
      - BearerToken: []
  /persons/avatar/{personId}:
    get:
      tags:
      - Personas
      summary: retorna el avatar de una persona
      parameters:
      - name: personId
        in: path
        description: Dirección de email
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
  /persons/forcedvias/{municipalityId}:
    get:
      tags:
      - Personas
      summary: retorna las vías forzadas
      description: "retorna todas las vías que existen en personas con el check forced\
        \ a true o con el code de la vía a null, solo retornará las distintas"
      parameters:
      - name: municipalityId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CensusViaViaType'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
      - ApiKey: []
  /persons/lock/{personId}:
    summary: Solicita el bloqueo de una persona
    get:
      tags:
      - Personas
      parameters:
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "423":
          description: Recurso bloqueado
      deprecated: false
      security:
      - ApiKey: []
  /persons/unlock/{personId}:
    summary: Solicita el desbloqueo de una persona
    get:
      tags:
      - Personas
      parameters:
      - name: personId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        "401":
          description: No autorizado
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - ApiKey: []
  /persons/survey/{personId}:
    post:
      tags:
      - Personas
      parameters:
      - name: personId
        in: path
        description: Id de la persona a la que se le añade la encuesta
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Establece encuesta de valoración global del servicio del ayuntamiento
          en el array de las valoracione de la persona recibida como parámetro en
          el path.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        "403":
          description: "La solicitud fue legal, pero el servidor rehúsa responderla\
            \ dado que el cliente no tiene los privilegios para realizarla. En contraste\
            \ a una respuesta 401 No autorizado, autenticarse previamente no va a\
            \ cambiar la respuesta."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "499":
          description: el usuario de sesion no tiene persona asignada
      deprecated: false
      security:
      - ApiKey: []
  /segment:
    get:
      tags:
      - Segments
      description: obtiene todos los segmentos
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Segment'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    post:
      tags:
      - Segments
      requestBody:
        description: Crea un nuevo segmento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /segment/{id}:
    get:
      tags:
      - Segments
      parameters:
      - name: id
        in: path
        description: id del segmento
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Segments
      parameters:
      - name: id
        in: path
        description: id del segmento
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Segments
      parameters:
      - name: id
        in: path
        description: id del segmento
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Segmento en uso
      deprecated: false
      security:
      - BearerToken: []
  /situationType:
    get:
      tags:
      - Tipos de Situaciones
      summary: Obtiene las situaciones disponibles
      description: Obtiene las situaciones disponibles
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituationType'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Tipos de Situaciones
      summary: Crea un nuevo tipo de situación
      description: Crea un nuevo tipo de situación
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SituationType'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SituationType'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /situationType/{situationTypeId}:
    get:
      tags:
      - Tipos de Situaciones
      summary: Obtiene  tipo de situación
      description: Obtiene el tipo de situación  por su ID
      parameters:
      - name: situationTypeId
        in: path
        description: identificador del tipo de situación
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "200":
          $ref: '#/components/schemas/SituationType'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Tipos de Situaciones
      summary: Actualiza un tipo de situación
      description: Actualiza un tipo de situación
      parameters:
      - name: situationTypeId
        in: path
        description: identificador del tipo de situación
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SituationType'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    delete:
      tags:
      - Tipos de Situaciones
      summary: Elimina el tipo de situación
      description: Elimina el tipo de situación indicado en el path
      parameters:
      - name: situationTypeId
        in: path
        description: identificador del tipo de situación
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
  /situationType/successors/{situationTypeId}:
    get:
      tags:
      - Tipos de Situaciones
      summary: Obtiene sucesoras
      description: Obtiene los tipos de situaciones sucesoras del la indicada por
        el parámertros para el usuario logado
      parameters:
      - name: situationTypeId
        in: path
        description: identificador del tipo de situación
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SituationType'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
  /tc:
    post:
      tags:
      - Tarjeta Ciudadana
      summary: Alta de tarjeta ciudadana
      description: Realiza el alta de una tarjeta ciudadana asociada a la persona
        identificada en la request por su id. Si la persona indicada no existe se
        devolverá un error
      requestBody:
        $ref: '#/components/requestBodies/CitizenCardRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitizenCard'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - ApiKey: []
  /tc/{idSgtc}:
    put:
      tags:
      - Tarjeta Ciudadana
      summary: Actualiza tarjeta ciudadana
      description: Realiza la actualización de una tarjeta ciudadana.
      parameters:
      - name: idSgtc
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Tarjeta ciudadana a actualizar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitizenCard'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - ApiKey: []
    patch:
      tags:
      - Tarjeta Ciudadana
      summary: Actualiza tarjeta ciudadana con la operación recibida
      description: Realiza la actualización de una tarjeta ciudadana. Permite modificar
        cualquiera de sus propiedades
      parameters:
      - name: idSgtc
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Operacion de actualización parcial de tarjeta ciudadana.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchOperation'
            example:
              op: replace
              path: enable
              value: "false"
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - ApiKey: []
  /users:
    post:
      tags:
      - Usuarios
      summary: Alta de usuario
      description: Crea el usuario de la persona asociada que debe de existir en el
        módulo de idetificación única y realiza el alta de un nuevo usuario a traves
        de Bus de integración en IS. Retorna el usuario creado. Si ya existe un usuario
        creado asociado a la persona recibida retornará un error 400 con la correspondiente
        descripción del error
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "460":
          description: Error por condiciones de la aplicación. Error en descripción
            de la respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
      - ApiKey: []
  /users/{userId}:
    get:
      tags:
      - Usuarios
      summary: Obtiene un usuario por su ID
      description: Retorna un usuario
      parameters:
      - name: userId
        in: path
        description: ID del usuario a recuperar
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
    put:
      tags:
      - Usuarios
      summary: Actualiza un usuario con el objeto recibido en el body
      description: ""
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        "201":
          description: La petición ha sido completada y ha resultado en la creación
            de un nuevo recurso.
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "460":
          description: Error por condiciones de la aplicación. Error en descripción
            de la respuesta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
      - ApiKey: []
    delete:
      tags:
      - Usuarios
      summary: Elimina un usuario. Realiza la baja en IS y marca como baja el perfil
        de la persona en CRM sin eliminar el documento.
      description: ""
      parameters:
      - name: userId
        in: path
        description: id del usuario a eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
  /users/{userId}/defaultdashboard:
    put:
      tags:
      - Usuarios
      summary: Establece el dashboard por defecto
      description: Establece el dashboard por defecto del usuario identificado en
        el path
      parameters:
      - name: userId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: default usersDashboard
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /users/userName/{userName}:
    get:
      tags:
      - Usuarios
      summary: Obtener usuario por nombre de usuario
      description: Obtiene el usuario pasado por parámetro en el path de la url.
      parameters:
      - name: userName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
      - ApiKey: []
  /users/tc/{idSgtc}:
    get:
      tags:
      - Usuarios
      summary: Obtener usuario por id de tarjeta ciudadana
      description: Obtiene el usuario a partir de su identificador de tarjeta ciudadana.
      parameters:
      - name: idSgtc
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
      - ApiKey: []
  /usersDashboards:
    get:
      tags:
      - Dashboards de usuarios
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDashboard'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Dashboards de usuarios
      summary: update
      requestBody:
        description: usersDashboard
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDashboard'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDashboard'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    post:
      tags:
      - Dashboards de usuarios
      summary: save
      requestBody:
        description: usersDashboards
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDashboard'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDashboard'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /usersDashboards/{id}:
    get:
      tags:
      - Dashboards de usuarios
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDashboard'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
    delete:
      tags:
      - Dashboards de usuarios
      summary: delete
      parameters:
      - name: id
        in: path
        description: id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      deprecated: false
      security:
      - BearerToken: []
  /usersbus:
    post:
      tags:
      - users-bus-controller
      summary: save
      operationId: saveUsingPOST_6
      requestBody:
        description: user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "201":
          description: Created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /usersbus/doc/{docId}:
    get:
      tags:
      - users-bus-controller
      summary: getUserByDocId
      operationId: getUserByDocIdUsingGET
      parameters:
      - name: docId
        in: path
        description: docId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: getperson
        in: query
        description: getperson
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /usersbus/tc/{idSgtc}:
    get:
      tags:
      - users-bus-controller
      summary: getUserByIdSgtc
      operationId: getUserByIdSgtcUsingGET_1
      parameters:
      - name: getperson
        in: query
        description: getperson
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: idSgtc
        in: path
        description: idSgtc
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /usersbus/validusername/{username}:
    get:
      tags:
      - users-bus-controller
      summary: validUserName
      operationId: validUserNameUsingGET_1
      parameters:
      - name: username
        in: path
        description: username
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /usersbus/{username}/{password}:
    get:
      tags:
      - users-bus-controller
      summary: getUserByUserName
      operationId: getUserByUserNameUsingGET_1
      parameters:
      - name: getperson
        in: query
        description: getperson
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: password
        in: path
        description: password
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: username
        in: path
        description: username
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      deprecated: false
      security:
      - BearerToken: []
  /params:
    description: Obtención de tipos de parámetros de la aplicación
    get:
      tags:
      - Parametrización
      summary: Tipos de Parámetros
      description: Obtiene los distintos tipos de parámetros de la aplicación.
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrmParamType'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /params/{paramType}:
    description: Gestión de parámetros de CRM se agruparán por el tipo
    get:
      tags:
      - Parametrización
      summary: Parámetros de la aplicación
      description: Obtiene los distintos valores de parametrización de la aplicación
        por su tipo. - Tipos de personas - Tipos de documentos
      parameters:
      - name: paramType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/CrmParamType'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrmParam'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    put:
      tags:
      - Parametrización
      summary: Actualiza un parámetro
      description: Actualiza el parámetro recibido
      parameters:
      - name: paramType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/CrmParamType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmParam'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Parametrización
      summary: Parámetros de la aplicación
      description: Crea un nuevo parámerto - Tipos de personas - Tipos de documentos
      parameters:
      - name: paramType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/CrmParamType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrmParam'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrmParam'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /params/{paramType}/{paramName}:
    description: Elimina parámetro de un tipo por su nombre
    delete:
      tags:
      - Parametrización
      summary: Eliminar parámetro
      description: Elimina el parámetro por su nombre para el tipo enviado en el path
      parameters:
      - name: paramType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/CrmParamType'
      - name: paramName
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      security:
      - BearerToken: []
  /dashboards:
    get:
      tags:
      - Dashboards
      summary: Obtiene los dashboards del usuario
      description: Obtiene todos los dashboards del usuario
      parameters:
      - name: ou
        in: query
        description: retorna los dashboards del usuario mas los de su unidad organizativa
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dashboard'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Dashboards
      summary: Crea un nuevo dashboard
      description: Crea una nuevo dashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /dashboards/{dashboardId}:
    get:
      tags:
      - Dashboards
      summary: Obtiene un dashboard
      description: Obtiene una dashboard por su id
      parameters:
      - name: dashboardId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    put:
      tags:
      - Dashboards
      summary: actualiza dashboard
      description: Actualiza un dashboard
      parameters:
      - name: dashboardId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    delete:
      tags:
      - Dashboards
      summary: Elimina aplicación externa
      description: Elimina un registro de aplicación externa
      parameters:
      - name: dashboardId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "404":
          description: Resource Not found
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /widget:
    get:
      tags:
      - Widgets
      summary: Obtiene widgets.
      description: Obtiene widgets del usuario y aquellos de su unidad organizativa
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  discriminator:
                    propertyName: widgetType
                  oneOf:
                  - $ref: '#/components/schemas/WidgetChart'
                  - $ref: '#/components/schemas/WidgetIndicator'
                  - $ref: '#/components/schemas/WidgetTable'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    post:
      tags:
      - Widgets
      summary: Crea un nuevo widget
      description: Crea un nuevo widget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Widget'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Widget'
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
  /widget/{widgetId}:
    get:
      tags:
      - Widgets
      summary: Elimina el widget indicado en el path
      parameters:
      - name: widgetId
        in: path
        description: identificador del widget
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "200":
          $ref: '#/components/schemas/Widget'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
    put:
      tags:
      - Widgets
      summary: Actualiza un widget
      description: "Actualiza un widget, sólo se podrán actualizar los widgets propios\
        \ del usuario"
      parameters:
      - name: widgetId
        in: path
        description: identificador del widget
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Widget'
        required: true
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "400":
          description: "El servidor no procesará la solicitud, porque no puede, o\
            \ no debe, debido a algo que es percibido como un error del cliente ej->\
            \ solicitud malformada, sintaxis errónea, etc). La solicitud contiene\
            \ sintaxis errónea y no debería repetirse."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
      security:
      - BearerToken: []
    delete:
      tags:
      - Widgets
      summary: Elimina el widget indicado en el path
      parameters:
      - name: widgetId
        in: path
        description: identificador del widget
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: ObjectId
      responses:
        "204":
          description: La petición se ha completado con éxito pero su respuesta no
            tiene ningún contenido (la respuesta puede incluir información en sus
            cabeceras HTTP).
        "401":
          description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero\
            \ específicamente para su uso cuando la autentificación es posible pero\
            \ ha fallado o aún no ha sido provista"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponseError'
        "404":
          description: Resource Not found
      deprecated: false
      security:
      - BearerToken: []
components:
  schemas:
    AdministrativeFile:
      type: object
      properties:
        _id:
          type: number
          description: identificador. ID
        code:
          type: string
          description: Código o referencia del expediente en experta. COD
        requestNumber:
          type: string
          description: Número de solicitud. NSOLICITUD
        startDate:
          type: string
          description: Fecha de creación. FECHA
        processingDate:
          type: string
          description: Fecha de tramitación. FECHATRA
        situationDate:
          type: string
          description: Fecha inicio situación. FECINISIT
        situationCode:
          type: string
          description: Código de situación. CODSIT
        situationDescription:
          type: string
          description: Descripción de situación. DESSIT
        stateCode:
          type: number
          description: Código del estado del expediente. ESTADO
        stateDescription:
          type: string
          description: Descripción del estado del expediente. DESESTADO
        subjectCode:
          type: number
          description: Código del asunto del expediente. CODASUNTO
        subject:
          type: string
          description: Asunto del expediente. DESASUNTO
        title:
          type: string
          description: Título del expediente. TITULO
        excerpt:
          type: string
          description: Extracto del expediente. EXTRACTO
        exercice:
          type: string
          description: Ejercicio del expediente. GEEXEJE
        department:
          type: string
          description: Departamento. DESDEP
      description: Expediente administrativo eXperta importado desde ETL
    Address:
      required:
      - _id
      - block
      - city
      - country
      - door
      - floor
      - forcedAddress
      - km
      - ladder
      - letter
      - municipality
      - number
      - portal
      - province
      - via
      - viaType
      - zipCode
      type: object
      properties:
        _id:
          type: string
          format: objectId
        viaType:
          $ref: '#/components/schemas/CensusViaType'
        via:
          $ref: '#/components/schemas/CensusEntity'
        number:
          type: string
        letter:
          type: string
        block:
          type: string
        portal:
          type: string
        ladder:
          type: string
          description: Escalera
        floor:
          type: string
          description: Piso o planta
        door:
          type: string
          description: Puerta
        km:
          type: string
        country:
          type: string
          description: País
        province:
          $ref: '#/components/schemas/CensusEntity'
        municipality:
          $ref: '#/components/schemas/CensusEntity'
        city:
          $ref: '#/components/schemas/CensusEntity'
        zipCode:
          type: integer
          description: Código postal
          format: postal-code
        forcedAddress:
          type: boolean
          description: Controla si la direccion no llega de otros sistemas y es forzada
            por el usuario.
      description: Esquema de dirección
    AnyValue:
      type: object
      properties: {}
      description: "Objeto ANY, no usar en el proyecto"
      deprecated: true
    ApiKey:
      required:
      - allowedOrigins
      - disabled
      - externalAplicationId
      - name
      - roles
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          example: Id de objeto
        name:
          type: string
          example: Apikey para consulta personas desde c3
        key:
          type: string
          example: 8a42adee-caa1-413a-aed6-6b65db8eb3ce
        externalAplicationId:
          type: string
          description: Id de la aplicación a la que pertenece la Key
        allowedOrigins:
          type: array
          description: Urls de origen dede la que se permite el uso de la key
          items:
            type: string
        roles:
          type: array
          description: roles de la Apikey que definirán que y sobre qué podrá actuar
            la apiKey
          items:
            $ref: '#/components/schemas/Role'
        created:
          type: string
          format: date
        createdBy:
          $ref: '#/components/schemas/UserBasic'
        modified:
          type: string
          format: date
        modifiedBy:
          $ref: '#/components/schemas/UserBasic'
        disabled:
          type: boolean
          default: false
      description: APIKey
      example:
        errorId: 524
        errorName: AREA_ERROR
        errorDescription: "ERROR EN EL ID DE AREA, NO ENCONTRADO"
        aditionalErrors:
        - Id de área 50 no existe
        - No se ha podido obtener área relacionada
    Audit:
      type: object
      properties:
        _id:
          type: string
          format: objectId
        controller:
          type: string
        createDate:
          type: string
          example: dd/MM/yyyy hh:mm:ss
        idUser:
          type: integer
          format: int64
        method:
          type: string
        params:
          type: string
        path:
          type: string
        requestMethod:
          type: string
        user:
          $ref: '#/components/schemas/User'
        userName:
          type: string
      description: Registro de auditoría
    Avatar:
      type: string
      description: Imagen de persona en base64
      format: byte
    BusinessProcessDefinition:
      type: object
      properties:
        suspended:
          type: boolean
        description:
          type: string
        diagramResource:
          type: string
        startFormDefined:
          type: boolean
        graphicalNotationDefined:
          type: boolean
        deploymentId:
          type: string
        name:
          type: string
        resource:
          type: string
        key:
          type: string
        version:
          type: number
        category:
          type: string
        id:
          type: string
        packageName:
          type: string
        formProperties:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessFormProperty'
    BusinessProcessEntity:
      type: object
      properties:
        name:
          type: string
        value:
          $ref: '#/components/schemas/AnyValue'
        type:
          type: string
    BusinessProcessIndicator:
      type: object
      properties:
        indicatorId:
          type: number
        description:
          type: string
        processDefinitionId:
          type: string
        initialTaskDefinitionKey:
          type: string
        finalTaskDefinitionKey:
          type: string
        minTimeInHours:
          type: number
        maxTimeInHours:
          type: number
        minLoops:
          type: number
        maxLoops:
          type: number
        type:
          type: string
        state:
          type: string
        alarmList:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessIndicatorAlarm'
        alarmCount:
          type: number
        alarmMeanValue:
          type: number
    BusinessProcessIndicatorAlarm:
      type: object
      properties:
        alarmId:
          type: number
        indicator:
          $ref: '#/components/schemas/BusinessProcessIndicator'
        value:
          type: number
        alarmDateTime:
          type: string
        readDateTime:
          type: string
        state:
          type: string
        processInstanceId:
          type: string
    BusinessProcessInstance:
      type: object
      properties:
        completed:
          type: boolean
        suspended:
          type: boolean
        variables:
          type: array
          items:
            $ref: '#/components/schemas/AnyValue'
        ended:
          type: boolean
        processDefinitionId:
          type: string
        activityId:
          type: string
        businessKey:
          type: string
        id:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessEntity'
        startTime:
          type: string
        endTime:
          type: string
        startUserId:
          type: string
        activityName:
          type: string
        assignee:
          type: string
        resource:
          type: string
        activityStartTime:
          type: string
        alarmCount:
          type: string
        indicatorList:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessIndicator'
        superProcessInstanceId:
          type: string
        startActivityId:
          type: string
        endActivityId:
          type: string
        durationInMillis:
          type: string
        deleteReason:
          type: string
    BusinessProcessTaskDefinition:
      type: object
      properties:
        name:
          type: string
        taskDefinitionKey:
          type: string
        type:
          type: string
        processInstancesCount:
          type: boolean
        alarmCount:
          type: string
    BusinessProcessTaskInstance:
      type: object
      properties:
        sort:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProcessTaskActivity'
        order:
          type: string
        total:
          type: number
        start:
          type: number
        message:
          type: string
        size:
          type: number
    BusinessProcessTaskActivity:
      type: object
      properties:
        id:
          type: string
        activityId:
          type: string
        activityName:
          type: string
        activityType:
          type: string
        assignee:
          type: string
        calledProcessInstanceId:
          type: string
        durationInMillis:
          type: number
        executionId:
          type: string
        processDefinitionId:
          type: string
        processInstanceId:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        taskId:
          type: number
      description: Actividad de instancia de proceso
    BusinessProcessFormProperty:
      type: object
      properties:
        writable:
          type: boolean
        required:
          type: boolean
        datePattern:
          type: string
        name:
          type: string
        value:
          type: string
        resource:
          type: string
        id:
          type: string
        type:
          type: string
    CampaignContact:
      required:
      - _id
      - campaignId
      - person
      type: object
      properties:
        _id:
          type: string
          description: id del contacto de la campaña en CRM
          format: ObjectId
        campaignId:
          type: string
          description: id de la campaña en CRM
        person:
          $ref: '#/components/schemas/Person'
      description: Esquema de un contacto que recibira la comunicación de una campaña
    Campaign:
      required:
      - _id
      - campaignIdName
      - campaignListName
      - datasource
      - disabled
      - fieldsMap
      - name
      - scheduledTime
      - status
      - template
      - type
      type: object
      properties:
        _id:
          type: string
          description: id de la campaña en CRM
          format: ObjectId
        name:
          type: string
          description: Nombre descriptivo en CRM
        campaignIdName:
          type: string
          description: Nombre interno en Contact Center
        campaignListName:
          type: string
          description: nombre de la lista de la campaña donde cargar los contactos
        type:
          type: string
          description: "tipo de campaña,.. email, telefono, sms,..."
        subject:
          type: string
          description: asunto de la campaña
        text:
          type: string
          description: texto a enviar en la campaña cuando en los tipos de campañas
            que no usan plantilla
        template:
          type: number
          description: Id de la plantilla de la KB de Contact Center que se usará
            en la campaña CRM
        datasource:
          $ref: '#/components/schemas/DataSource'
        datasourceItemsOnLoad:
          type: number
          description: elementos del datasource en la ejecuación de la carga en la
            lista
          readOnly: true
        loadErrorsOnLoad:
          type: number
          description: elementos que retornaron error en la carga en la lista
          readOnly: true
        fieldsMap:
          type: array
          description: ¡¡ Pendiente de validar !! Mapeo de campos entre los campos
            de la plantilla y los campos del datasource
          items:
            $ref: '#/components/schemas/Campaign_fieldsMap'
        disabled:
          type: boolean
          description: indica si la campaña está desabilitada
          default: true
        userOwner:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserBasic'
        scheduledTime:
          type: string
          description: fecha hora de planificación
          format: timestamp
        loadTime:
          type: string
          description: fecha y hora de ejecución de la carga
          format: timestamp
          readOnly: true
        status:
          type: string
          description: Estados de la campaña created (creada) modified (modificada)
            scheduled (planificada) onLoad (Cargando contactos) onProcess (procesandose
            en contact center ) error (error en carga) finished (finalizada)
          enum:
          - created
          - modified
          - scheduled
          - onLoad
          - onProcess
          - error
          - finished
      description: "Esqeuma de campaña para la integración con C7, Dado que las campañ\
        as son fijas, para CRM una campaña será un canal"
      discriminator:
        propertyName: type
    CensusData:
      type: object
      properties:
        inHabitantCode:
          type: number
          description: Código de habitante (codigoHabitante)
        sex:
          maxLength: 1
          type: string
          description: Sexo V-varón M-Mujer (sexo)
        district:
          type: number
          description: Distrito (distrito)
        section:
          type: number
          description: Sección (seccion)
        sectionLetter:
          type: string
          description: Letra de sección (letraSeccion)
        birthDate:
          type: string
          format: date-time
        entryDate:
          type: string
          description: Fecha de alta  (fechaAlta)
          format: date-time
        registrationDate:
          type: string
          description: Fecha de empadronamieto (fechaEmpadronamiento)
          format: date-time
        lastOperationDate:
          type: string
          description: Fecha de última operación (fechaUltimaOperacion)
          format: date
        censusState:
          type: number
          description: |-
            Estado. (estado)
            Posibles valores:
              0 -ESTADO_NO_LOCALIZADO
              1 -ESTADO_SIN_INCIDENCIAS
              2 -ESTADO_NO_ACTIVO
              3 -ESTADO_DOS_REGISTROS
              4 -ESTADO_PROPUESTA_BAJA_CADUCIDAD
              5 -ESTADO_PROPUESTA_BAJA_OTRA_CAUSA
              6 -ESTADO_PROPUESTA_BAJA_OFICIO
        censusStateText:
          type: string
          description: Estado de inscripción en censo (textoEstado)
        numberOfInhabitants:
          type: number
          description: Número de Habitantes encontrados (numeroHabitantes).
        family:
          type: number
          description: "Modo Familia 0-No, 1-Nivel Hoja, 2-Nivel Habitante (familia)"
        degreeCode:
          type: number
          description: Código de titulación (codigoTitulacion)
        degreeName:
          type: string
          description: Nombre de titulación (nombreTitulacion)
        nationalityCode:
          type: number
          description: 'Código de nacionalidad (codigoNacionalidad) '
        nationalityName:
          type: string
          description: Nombre de nacionalidad (nombreNacionalidad)
        lastChangeCause:
          type: string
          description: Causa de última variación (causaUltimaVariacion)
        europeanCommunity:
          type: number
          description: Nacionalidad Comunitaria (comunitario)
        permanentResidenceCard:
          type: number
          description: Tarjeta de residencia permanente (tarjetaResidenciaPermanente)
        city:
          type: string
        country:
          type: number
        state:
          type: string
        zipCode:
          type: string
          format: postal-code
        domicileCode:
          type: number
          description: Código de domicilio
        email:
          type: string
          description: email establecido en el padrón
      description: "Información censal del padrón actualizable desde procesos, no\
        \ de forma interactiva"
    CensusEntity:
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: number
        name:
          type: string
      description: "Entidad de padrón, pueden ser municipios, nucleos, provincias,..."
    CensusViaType:
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      description: "tipos de vías del padrón, el código es un string"
    CensusViaViaType:
      required:
      - via
      - viaType
      type: object
      properties:
        via:
          $ref: '#/components/schemas/CensusEntity'
        viaType:
          $ref: '#/components/schemas/CensusViaType'
      description: via con tipo de vía asociada
    ChangePasswordRequest:
      type: object
      properties:
        userid:
          type: string
        oldPassword:
          type: string
        newPassword:
          type: string
      description: Objeto para la petición de cambio de contraseña
    CitizenCard:
      type: object
      properties:
        _id:
          type: string
          description: identificador de tarjeta ciudadana
          example: 487f1ff
        state:
          type: string
          description: Estado de la tarjeta
          example: B
        citizenId:
          type: string
          description: Identificador del ciudadano en el componente Tarjeta Ciudadana
          example: CI000001
      description: Tarjeta Ciudadana (Objeto pte de definir por C1)
    CollectionName:
      type: object
      properties:
        clazz:
          type: string
        name:
          type: string
      description: Nombre de colección
    CollectionProperty:
      type: object
      properties:
        propertyName:
          type: string
        propertyType:
          type: string
      description: Propiedades o campos de una colección
    Comment:
      required:
      - _id
      - text
      - timestamp
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          example: Id de objeto
        text:
          type: string
        type:
          type: string
          description: tipo de situacion
        code:
          type: number
          description: Codigo situacion
        description:
          type: string
          description: descripcion situacion
        timestamp:
          type: string
          description: Creation date and time
          format: date-time
          example: 2021-01-30T08:30:00Z
        user:
          $ref: '#/components/schemas/UserBasic'
    CrmFeaturePermissions:
      type: object
      additionalProperties:
        type: boolean
      description: Permisos de una feature
    CrmParam:
      required:
      - description
      - value
      type: object
      properties:
        value:
          maxLength: 15
          type: string
          description: nombre del  parámetro
          example: DNI
        description:
          type: string
          description: Descripción del parámetro
          example: Documento nacional de identidad
      description: Valores de parámetros de configuración de CRM
      example:
        value: DNI
        description: Documento nacional de identidad
    CrmParamType:
      type: string
      properties:
        paramType:
          maxLength: 10
          type: string
          description: Tipo de parámetro
          example: ContactMethods
      description: "Tipos de parámetros CRM ( ContactMethod, identificationType, Genre,\
        \ AddressType, PesonType,..)"
    CrmPermissions:
      type: object
      properties:
        default:
          $ref: '#/components/schemas/CrmFeaturePermissions'
      additionalProperties:
        $ref: '#/components/schemas/CrmFeaturePermissions'
      description: Permisos de usuario. Es un objeto con una estructura de permisos
        por feature
    CrmRequest:
      required:
      - _id
      - active
      - businessProcessesInstancesIds
      - comments
      - createDate
      - customForm
      - customFormData
      - details
      - interactionOrigin
      - interactionRelationsIds
      - lastModifiedDate
      - requestType
      - situations
      - userAgent
      - userOwner
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        createDate:
          type: string
          format: date
        lastModifiedDate:
          type: string
          format: date
        userAgent:
          description: "Usuario creador de la solicitud, es el usuario inicial de\
            \ la solicitud, no se puede modificar."
          allOf:
          - $ref: '#/components/schemas/UserBasic'
        userOwner:
          description: "Usuario propietario actual de la solicitud, es el usuario\
            \ encargado de gestionarla, se podrán realizar reasignaciones de uno a\
            \ otro"
          allOf:
          - $ref: '#/components/schemas/UserBasic'
        subjectId:
          type: string
          description: "Identificador único del sujeto en la iniciativa. Podrá ser\
            \ organización, ciudadano, visitante, empresa, etc. No es un atributo\
            \ requerido porque se podrán registrar interacciones anónimas"
          format: ObjectId
        requestType:
          $ref: '#/components/schemas/CrmRequestType'
        interactionOrigin:
          $ref: '#/components/schemas/Interaction'
        interactionRelationsIds:
          type: array
          description: Identificadores de interacciones relacionadas con la solicitud
          items:
            type: string
            format: ObjectId
        businessProcessesInstancesIds:
          type: array
          description: Ids de instancias de procesos de negocio lanzados al crear
            la solicitud
          items:
            type: string
        details:
          type: string
          description: descripción de la solicitud
        customForm:
          $ref: '#/components/schemas/CustomForm'
        customFormData:
          type: object
          description: Datos del formulario personalizado para la tipo de solicitud
        situations:
          type: array
          description: Situaciones de la solicitud
          items:
            $ref: '#/components/schemas/Situation'
        comments:
          type: array
          description: Comentarios a la solicitud
          items:
            $ref: '#/components/schemas/Comment'
        active:
          type: boolean
        survey:
          $ref: '#/components/schemas/Survey'
      description: Solicitud realizada en CRM de una persona o componente que precisa
        de una gestión y/o la intervención de otros sistemas por lo que dispone de
        un ciclo de vida y pasa por diferentes estados desde su inicio hasta su cierre.
        Podrá disponer de un proceso de negocio asociado o un usuario asignado para
        la realiazción de la solicitud de forma manual.
    CrmRequestType:
      required:
      - _id
      - businessProcessesDefinitionsIds
      - customForm
      - description
      - identificator
      - name
      - organizationalUnit
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        identificator:
          maximum: 8
          minimum: 6
          type: string
          description: identificador corto de la solicitud
          example: INSEVN
        name:
          title: Nombre del tipo de solicitud
          type: string
          example: Inscripción a evento
        description:
          title: Descripción extendida de la solicitud
          type: string
          example: Inscripción a eventos gratuíto
        businessProcessesDefinitionsIds:
          title: Lista de identificadores de procesos BP que desencadena la solicitud
          type: array
          example:
          - sampleJavaServiceTask:1:27503
          - sample2JavaServiceTask:1:27587
          items:
            type: string
        customForm:
          $ref: '#/components/schemas/CustomForm'
        organizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
        segmentation:
          type: array
          description: segmentos que genera la solicitud
          items:
            $ref: '#/components/schemas/Segment'
      description: Tipo de solicitud crm
    CustomField:
      title: CustomField
      required:
      - name
      - target
      type: object
      properties:
        name:
          type: string
          description: Nombre asignado en la salida
        target:
          type: string
          description: Nombre de la propiedad en la colección.
        type:
          type: string
          description: "tipo de campo, se usa para almacenarlo en front a partir de\
            \ propiedades de la coleccion"
        operator:
          type: string
          description: Operador en proyecciones
      description: campos de la consulta a recuperar o columnas calculadas
    CustomFieldSort:
      type: object
      properties:
        order:
          type: integer
          description: ASC > 0 DESC <= 0.
          format: int32
        target:
          type: string
          description: Nombre de la propiedad en la collection
      description: campos que definen el orden de cada uno de ellos
    CustomForm:
      type: object
      properties:
        _id:
          type: string
          format: objectId
        name:
          type: string
          example: Formulario 1
        code:
          type: string
          example: F100
        description:
          type: string
          example: Descripcion del formulario
        components:
          type: object
        type:
          type: string
          example: Tipo
          deprecated: true
      description: Formularios personalizados
    Dashboard:
      type: object
      properties:
        _id:
          type: string
          format: objetId
        name:
          type: string
          description: Nombre del dashboard
        description:
          type: string
          description: descripción del dashboard
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/Widget'
        widgetsConfiguration:
          type: array
          description: Tamaño en celdas y posición del widget
          items:
            $ref: '#/components/schemas/DashboardConfiguration'
        userOwnerId:
          type: string
          description: usuario propietario
          format: objectId
        organizationalUnit:
          type: array
          description: Unidades organizativas a la que se le permite el uso del dashboard
          items:
            $ref: '#/components/schemas/OrganizationalUnit'
      description: Cuadro de mando o dashboard que consiste en un conjunto de widgets
        con sus respectivas configuraciones.
    DashboardConfiguration:
      required:
      - _id
      - cols
      - rows
      - x
      - "y"
      type: object
      properties:
        _id:
          type: string
          description: Id del widget
          format: ObjectId
          example: 507f1f77bcf86cd799439011
        x:
          type: number
          description: posición en el eje x
          example: 2
        "y":
          type: number
          description: posición en el eje y
          example: 2
        rows:
          type: number
          description: Filas que ocupa
          example: 2
        cols:
          type: number
          description: Columnas que ocupa
          example: 2
      description: Configuración del un widget del dashboard
    DataSerie:
      type: object
      properties:
        datasource:
          $ref: '#/components/schemas/DataSource'
        dataSourceField:
          type: string
          description: campo de la fuente de datos a mostrar en la serie
        dataSourceFieldForLabel:
          type: string
          description: campo de la fuente de datos a usar como label (etiqueta de
            descripciónperson) de los datos
        name:
          type: string
          description: nombre de la serie
        color:
          type: string
          description: Color de la serie
      description: series de datos a mostrar en widgets
    DataSource:
      title: DataSource
      required:
      - _id
      - collection
      - description
      - group
      - limit
      - name
      - orderBy
      - organizationalUnitAllowed
      - projectionFields
      - rule
      - userOwner
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        collection:
          $ref: '#/components/schemas/CollectionName'
        description:
          type: string
        group:
          description: definición de agrupación (groupBy)
          allOf:
          - $ref: '#/components/schemas/GroupOperator'
        limit:
          type: integer
          format: int32
        name:
          type: string
        orderBy:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldSort'
        organizationalUnitAllowed:
          $ref: '#/components/schemas/OrganizationalUnit'
        projectionFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        ruleSet:
          $ref: '#/components/schemas/RuleSet'
        userOwner:
          $ref: '#/components/schemas/UserBasic'
    Faq:
      required:
      - _id
      - answers
      - description
      - name
      - organizationalUnit
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        organizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
        name:
          type: string
          description: Nombre descriptivo de la FAQ
          example: Préstamo de material
        description:
          type: string
          description: Descripción de la FAQ
          example: El ayuntamiento pone a disposición de ciudadanos el material necesario
            para la realización de eventos
        answers:
          type: array
          items:
            $ref: '#/components/schemas/FaqAnswer'
      description: Pregunta frecuente de la BBDD de conocimiento
    FaqAnswer:
      required:
      - _id
      - answerDescription
      - answerText
      - relatedInfoFiles
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        answerDescription:
          type: string
          description: Descripción de la respuesta
          example: Prestamos a ciudadanos menores de 18 años
        answerText:
          type: string
          description: texto de la respuesta
          example: Mediante la solicitud a través del formulario adjunto o tramite
            en sede electrónica pueden acceder al prestamo. Será necesaria la decalración
            responsable de una adulto.
        relatedInfoFiles:
          type: array
          description: Descripción de la FAQ
          items:
            $ref: '#/components/schemas/FaqFile'
      description: Respuestas a pregunta frecuente
    FaqFile:
      required:
      - _id
      - fileName
      - fileType
      - name
      type: object
      properties:
        _id:
          type: string
          description: "referencia al archivo (url, ubicación,...) Pendiente de definir\
            \ almacenamiento"
        name:
          type: string
          example: 00015-Formulario prestamos
        description:
          type: string
          example: Formulario de solicitud de prestamo de material
        fileName:
          type: string
          description: nombre del archivo
          example: documento.pdf
        fileType:
          type: string
          description: tipo de archivo (extensión)
          example: pdf
      description: archivo realcionado con pregunta frecuente
    FaqNameUpdateRequest:
      required:
      - description
      - name
      type: object
      properties:
        name:
          type: string
          example: Formulario prestamos
        description:
          type: string
          example: Formulario de solicitud de prestamo de material
      description: petición de actualización de nombre y descripción de faq
    ElectronicOffice:
      required:
      - _id
      - contact
      - description
      - provider
      type: object
      properties:
        initDate:
          type: string
          format: date-time
        situation:
          type: number
        thirdpartyCode:
          type: number
          description: identificador de tercero en eXperta
          example: 584
        thirdpartyNormalized:
          type: string
          description: tercero normalizado
          example: julio ruiz ruiz
        thirdpartyType:
          type: string
          description: tipo de tercero
          example: "2"
        administrativeFiles:
          type: array
          description: lista de expedientes administrativos
          items:
            $ref: '#/components/schemas/AdministrativeFile'
      description: Registro de aplicaciones externas que se integran con CRM
    ExternalAplication:
      required:
      - _id
      - contact
      - description
      - provider
      type: object
      properties:
        _id:
          maxLength: 6
          type: string
          example: SSCC07
        description:
          type: string
          example: Santader Smart Citicen Componente 7
        provider:
          type: string
          example: Telefónica
        contact:
          type: string
          example: ssc@telefonica.es
      description: Registro de aplicaciones externas que se integran con CRM
    Fid:
      required:
      - appId
      - authCode
      - authUrl
      - expires_in
      - userId
      type: object
      properties:
        appId:
          type: string
        userId:
          type: string
          format: ObjectId
        authCode:
          type: string
        authUrl:
          type: string
        authStamp:
          type: string
          format: date-time
        expires_in:
          type: number
        enable:
          type: boolean
      description: objeto que contiene la autorización federada en una aplicación
        de terceros.
    Filter:
      type: object
      properties:
        first:
          type: number
          description: primer elemento a retornar de los resultados
        rows:
          type: number
          description: Numero de elementos a retornar de los resultados
        filters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FilterMetadata'
          description: Objeto de filtrado
        sortOrder:
          type: number
          description: "Orden , 1 para ascendente  y  -1 para descendente en ordenació\
            n simple"
        sortField:
          type: string
          description: Campo por el que ordenqar en el modo de ordenación simple
        globalFilter:
          type: string
          description: Filtro global para realiar filtrado en distintos campos
        multiSortMeta:
          type: array
          description: Objeto de ordenación múltiple
          items:
            $ref: '#/components/schemas/SortMetadata'
      description: Petición de filtrado paginado sobre una colección
      example:
        first: 0
        rows: 10
        filters:
          name:
            value: jose
            matchMode: contains
          surname1:
            value: perez
            matchMode: contains
          email:
            value: joseperez@mail.com
            matchMode: equals
        sortOrder: 1
        sortField: name
        multiSortMeta: []
    FilterAuditRequest:
      type: object
      properties:
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
        idUser:
          type: integer
          format: int64
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: integer
          format: int32
        userName:
          type: string
      description: Petición de filtrado de de auditoría
      deprecated: true
    FilterMetadata:
      title: FilterMetadata
      type: object
      properties:
        metadatas:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        operator:
          type: string
      description: "Operadores: \"and\":y debe ir acompañado de una array de Metadata\
        \ (value, matchMode) \"or\": o  debe ir acompañado de una array de Metadata\
        \ (value, matchMode)"
    FilterResponse:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
        totalResults:
          type: number
          example: 18
        results:
          type: array
          items:
            $ref: '#/components/schemas/AnyValue'
      description: "objeto de respuesta de una peticiónd de filtrado, contendrá los\
        \ datos del estado del filtro y será ampliado en la correspondiente respuesta\
        \ con los datos retornados"
    ForgotPasswordRequest:
      type: object
      properties:
        sgtcId:
          type: string
        email:
          type: string
      description: Objeto para la petición de enlace de contraseña olvidada
    GroupIdField:
      title: CustomField
      type: object
      properties:
        name:
          type: string
          description: Nombre asignado en la salida
        target:
          type: string
          description: Nombre de la propiedad en la proyección.
      description: ids de campos de agrupación en consultas
    GroupField:
      title: GroupField
      type: object
      properties:
        accumulator:
          description: "Operación a realizar, SUM, COUNT, AVG, ETC…"
          allOf:
          - $ref: '#/components/schemas/Operators'
        expression:
          type: string
          description: Propiedad por la que se realiza la operación.
        field:
          type: string
          description: Alias nombre de salida.
    GroupOperator:
      title: GroupOperator
      type: object
      properties:
        _id:
          type: array
          description: Campos por los que agrupar
          items:
            $ref: '#/components/schemas/GroupIdField'
        fields:
          type: array
          description: Campos calculados con operadores
          items:
            $ref: '#/components/schemas/GroupField'
    Integration:
      type: object
      properties:
        _id:
          type: string
          description: "nombre de la importación, este nombre debrerá coincidir con\
            \ el que llegue en los datos de la ETL."
        description:
          type: string
          description: Descripción de la importación
        collection:
          type: string
          description: nombre de la colección que almacenará los datos importados
        key:
          type: array
          description: Clave de los datos importados que establecerán la relación
          items:
            $ref: '#/components/schemas/IntegrationKeyRelation'
      description: objeto que configura una integración de datos de otro sistema que
        se realziará mediante ETL
    PersonContact:
      type: object
      properties:
        _id:
          type: string
          description: id de la persona
        phone:
          type: string
          description: telefono
        email:
          type: string
          description: email de la persona
        subject:
          type: string
          description: asunto
        body:
          type: string
          description: cuerpo del mensaje
        contactMethod:
          type: string
          description: metodo de contacto
      description: Contacto/mensaje a lanzar a  una persona
    IntegrationItem:
      type: object
      properties:
        name:
          type: string
          description: Nombre de la integración proveniente de la configuración de
            la integración
        lastUpdate:
          type: string
          description: Fecha de la última actualización de los datos
          format: date-time
      description: Item del catálogo de integraciones
    IntegrationKeyRelation:
      type: object
      properties:
        integrationSourceField:
          type: string
          description: Campo origen de la relación en el sistema externo
        crmSourceField:
          type: string
          description: Campo destino de la relación en CRM
      description: objeto de relación entre persona y datos de importación
    Interaction:
      required:
      - _id
      - comments
      - createDate
      - customFormData
      - detail
      - interactionDirection
      - interactionType
      - lastModifiedDate
      - situations
      - sourceExternalAplicationId
      - userAgent
      properties:
        _id:
          type: string
          description: Como object id tendrá el timestamp de creación
          format: ObjectId
          example: 507f1f77bcf86cd799439011
        interactionDiscriminator:
          type: string
          description: Discriminador del tipo de interacción
          enum:
          - InteractionBatch
          - InteractionInteractive
        userAgent:
          $ref: '#/components/schemas/UserBasic'
        subjectId:
          type: string
          description: "Identificador único del sujeto en la iniciativa. Podrá ser\
            \ organización, ciudadano, visitante, empresa, etc. No es un atributo\
            \ requerido porque se podrán registrar interacciones anónimas"
          format: ObjectId
          example: 487f1ff7cbcf86cd799439011
        sourceExternalAplicationId:
          type: string
          description: "ID del componente o aplicación que genera la interacción,\
            \ en las interactivas será CRM y en el resto será una aplicación previamente\
            \ identificada"
          format: ObjectId
          example: e475dff7cbcf86cd799439011
        interactionType:
          $ref: '#/components/schemas/InteractionType'
        interactionDirection:
          type: string
          description: Dirección de la interacción persona->sistema o viceversa
          enum:
          - inbound
          - outbound
        detail:
          type: string
          description: Detalle de la interacción
          example: Llamada telefónica consulta
        situations:
          type: array
          description: "Situaciones de la interacción en el caso de interacciones\
            \ serán creadas y cerradas nomalmente por el agente ya que en otro caso\
            \ hay que generar una solicitud pero se deja abierto para poder tener\
            \ tiempos de resolución, atención,..."
          items:
            $ref: '#/components/schemas/Situation'
        comments:
          type: array
          description: Comentarios a la interacción
          items:
            $ref: '#/components/schemas/Comment'
        createDate:
          type: string
          description: "Fecha de creación en formato según RFC 3339, section 5.6"
          format: date
        lastModifiedDate:
          type: string
          description: "Fecha de última modificación en formato según RFC 3339, section\
            \ 5.6"
          format: date
        customFormData:
          type: object
      description: "Acción que realiza una persona, componente o sistema relacionado\
        \ con la iniciativa que no precisa de gestión"
      discriminator:
        propertyName: interactionDiscriminator
    InteractionBatch:
      description: Interaccion que se captura de forma desatendida desde un componente
        o aplicación de terceros
      allOf:
      - $ref: '#/components/schemas/Interaction'
      - required:
        - geom
        - sourceElementDescription
        type: object
        properties:
          sourceElementDescription:
            type: string
            description: descripción del elemento que genera la interacción
          sourceElementExternalId:
            type: string
            description: identificador externo del elemento que genera la interacción
          geom:
            type: object
            format: GeoJSON
    InteractionInteractive:
      description: Interaccion que se captura de forma interactiva a traves de CRM
      allOf:
      - $ref: '#/components/schemas/Interaction'
      - required:
        - active
        - contactMethod
        - resolution
        - resolutionUserAgent
        type: object
        properties:
          contactMethod:
            $ref: '#/components/schemas/CrmParam'
          contactStoredId:
            type: number
            description: "Identificador de la llamada grabada, chat , conversació\
              n por mensajería proporcionadad por el C7"
            example: 55148
          resolution:
            type: string
            description: Solución aportada a la interacción
          resolutionUserAgent:
            $ref: '#/components/schemas/UserBasic'
          request:
            $ref: '#/components/schemas/CrmRequest'
          active:
            type: boolean
            description: indica si la interacción está aun activa
    InteractionStatistic:
      type: object
      properties:
        count:
          type: number
        interactionType:
          $ref: '#/components/schemas/InteractionType'
      description: estadistica de interacciones
    InteractionType:
      required:
      - batch
      - description
      - identificator
      - name
      - organizationalUnit
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        identificator:
          maximum: 8
          minimum: 6
          type: string
          description: "Código corto que identifica el tipo, tiene que ser único"
          example: BEAREG
        name:
          type: string
          description: nombre de la interacción
          example: Registro WiFi
        description:
          type: string
          description: descripción del elemento que genera la interacción
          example: Registro en punto acceso wifi
        batch:
          type: boolean
          description: Indica si el tipo es de una interacción batch interacción
          example: true
        organizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
        customForm:
          $ref: '#/components/schemas/CustomForm'
        segmentation:
          type: array
          description: segmentos que genera la interacción
          items:
            $ref: '#/components/schemas/Segment'
      description: Tipo de interacción
    Language:
      required:
      - code
      - name
      type: object
      properties:
        code:
          maxLength: 2
          type: string
          description: Código de idioma según ISO 639-1
          example: us
        name:
          type: string
      description: Idioma de la aplicación
      example:
        code: es
        name: Español
    LanguageExtended:
      allOf:
      - $ref: '#/components/schemas/Language'
      - required:
        - literals
        type: object
        properties:
          literals:
            type: object
            additionalProperties:
              type: string
    Login:
      type: object
      properties:
        username:
          type: string
          example: user2547
        telephone:
          type: string
          example: "657487598"
        email:
          type: string
          example: user2547@santander.es
        tc:
          type: string
          example: 487f1ff
        docType:
          $ref: '#/components/schemas/CrmParam'
        docId:
          type: string
          example: "6898575.0"
        password:
          type: string
          format: binary
      description: "objeto de login, permitirá hacer login mediante usuario, telefono,email\
        \ o tarjeta ciudadana. Si se proporciona mas de uno devolverá error en la\
        \ petición"
    LoginFid:
      type: object
      properties:
        appId:
          type: string
        allOf:
          $ref: '#/components/schemas/Login'
      description: "objeto de login Federado, permitirá hacer login mediante usuario,\
        \ teléfono, email o tarjeta ciudadana en una aplicación de terceros. Si se\
        \ proporciona mas de un método de identificación se devolverá error en la\
        \ petición"
    LoginTrusted:
      type: object
      properties:
        providerId:
          type: string
        identificationDoc:
          type: string
        userName:
          type: string
      description: "objeto de login de confianza, permitirá hacer login a un usuario\
        \ autenticado por otros métodos (BORRADOR)"
    Metadata:
      title: Metadata
      type: object
      properties:
        matchMode:
          type: string
        value:
          type: string
      description: "\"startsWith\": String que empieza por \"contains\": String que\
        \ contiene             \"endsWith\": String que acaba en \"equals\": String\
        \ igual a             \"notEquals\": String distinto de  \"exists\": si la\
        \ key existe en la colleción (TRUE), si la key no exite en la collección (FALSE),\
        \ solo acepta boolean             \"is\": Es igual para valores numericos,\
        \ fechas en formato \"yyyy-MM-dd\" o formato \"yyyy-MM-dd HH:mm:ss\", booleanos\
        \ y string             \"in\": Incluido en array de String separados por comas\
        \             \"lt\": Menor que para valores numericos, fechas en formato\
        \ \"yyyy-MM-dd\" o formato \"yyyy-MM-dd HH:mm:ss\", booleanos y string \"\
        lte\": Menor que o igual para valores numericos, fechas en formato \"yyyy-MM-dd\"\
        \ o formato \"yyyy-MM-dd HH:mm:ss\", booleanos y string \"gt\": Mayor que\
        \ para valores numericos, fechas en formato \"yyyy-MM-dd\" y formato \"yyyy-MM-dd\
        \ HH:mm:ss\", booleanos y string \"gte\": Mayor que o igual para valores numericos,\
        \ fechas en formato \"yyyy-MM-dd\" o formato \"yyyy-MM-dd HH:mm:ss\", booleanos\
        \ y string \"betweenDate\": Entre fechas en formato \"yyyy-MM-dd\" o formato\
        \ \"yyyy-MM-dd HH:mm:ss\""
    Note:
      title: Note
      type: object
      properties:
        description:
          type: string
        idUser:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
      deprecated: true
    Operators:
      type: string
      enum:
      - COUNT
      - SUM
      - COUNTSUM
      - LAST
      - FIRST
      - PUSH
      - AVG
      - MIN
      - MAX
      - ADD_TO_SET
      - STD_DEV_POP
      - STD_DEV_SAMP
    Comparators:
      type: string
      enum:
      - startsWith
      - contains
      - endsWith
      - equals
      - notEquals
      - exists
      - is
      - in
      - lt
      - lte
      - gt
      - gte
      - betweenDate
    OrganizationalUnit:
      required:
      - OrganizationalUnitType
      - _id
      - name
      type: object
      properties:
        _id:
          maxLength: 6
          type: string
          description: identificador corto de la unidad
          example: CONJUV
        organizationalUnitType:
          $ref: '#/components/schemas/OrganizationalUnitType'
        name:
          type: string
          description: Nombre de la unidad
          example: Concejalía de juventud
        description:
          type: string
          description: Info adicional de la unidad
          example: Concejalía encargada de asuntos de Juventud
        logo:
          type: string
          description: Imagen de la unidad
          format: byte
        primaryColor:
          type: string
          description: Color Primario
        secondaryColor:
          type: string
          description: Color secundario
        address:
          type: string
          description: dirección de la unidad
        zipCode:
          maxLength: 6
          type: string
          description: dirección de la unidad
        city:
          type: string
          description: Población
        responsable:
          type: string
          description: Persona responsable de la unidad
        email:
          type: string
          description: email de la unidad
        phone:
          type: string
          description: teléfono de contacto de la unidad
        url:
          type: string
          description: url de la unidad
        parentId:
          maxLength: 6
          type: string
          description: identificador corto de la unidad Padre
          example: PRESID
      description: Unidad organizativa
    OrganizationalUnitType:
      type: object
      properties:
        _id:
          maxLength: 6
          type: string
          description: identificador corto del tipo de unidad organizativa
          example: UNIORG
        description:
          type: string
          description: Descripción de unidad organizativa
          example: Unidad Orgánica
      description: Unidad organizativa
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
    PatchOperation:
      type: object
      properties:
        op:
          type: string
          example: replace
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
        path:
          type: string
          example: address/zipCode
        value:
          type: string
          example: "10200"
      additionalProperties: false
      description: objeto que define la operación a realizar en un objeto mediante
        el método patch. Siguiendo las indicaciones de rfc6902
    Person:
      required:
      - name
      - personType
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          example: 487f1ff7cbcf86cd799439011
        identificationType:
          $ref: '#/components/schemas/CrmParam'
        identificationDoc:
          type: string
          description: Documento de identificación
          example: 111111111H
        avatar:
          $ref: '#/components/schemas/Avatar'
        personType:
          $ref: '#/components/schemas/CrmParam'
        citizenCard:
          $ref: '#/components/schemas/CitizenCard'
        interactionsStatistic:
          type: array
          items:
            $ref: '#/components/schemas/InteractionStatistic'
        name:
          type: string
          example: JUAN
        surname1:
          type: string
          example: APELLIDO1
        surname2:
          type: string
          example: APELLIDO2
        birthDate:
          type: string
          description: "Fecha completa según RFC 3339, section 5.6"
          format: date-time
          example: 2017-07-21T17:32:28Z
        phones:
          type: array
          example:
          - 695748759
          - 987458785
          items:
            type: string
            format: phone
        email:
          type: string
          example: juanapellido@santander.es
        preferedContactMethod:
          $ref: '#/components/schemas/CrmParam'
        censusData:
          $ref: '#/components/schemas/CensusData'
        electronicOffice:
          $ref: '#/components/schemas/ElectronicOffice'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        genre:
          $ref: '#/components/schemas/CrmParam'
        segmentation:
          type: array
          description: Lista de los segmentos de perfilado a los que pertenece la
            persona con sus propiedades particulares
          items:
            $ref: '#/components/schemas/SegmentItem'
        segmentationWhiteList:
          type: array
          description: Lista de los segmentos añadidos manualmente que no expiran
          items:
            $ref: '#/components/schemas/Segment'
        segmentationBlackList:
          type: array
          description: Lista de los segmentos que la persona rechaza que se le asignen
          items:
            $ref: '#/components/schemas/Segment'
        deleted:
          type: boolean
          example: true
        deletedDate:
          type: string
          description: "Fecha completa según RFC 3339, section 5.6"
          format: date-time
          example: 2017-07-21T17:32:28Z
        integrations:
          type: array
          description: Catálogo de integraciones disponibles para la persona
          items:
            $ref: '#/components/schemas/IntegrationItem'
        surveys:
          type: array
          description: opiniones sobre el servicio prestado por el ayuntamiento. Un
            ciudadano podrá valorar el servicio de forma general cuantas veces quiera
          items:
            $ref: '#/components/schemas/Survey'
        interactionsTypesBlackList:
          type: array
          description: Lista de los tipos de interacciones que el usuario ha bloqueado
            y no desea que se realize seguimiento. Es un array con los identificadores
            (identificator) de los tipos a bloquear
          items:
            type: string
      description: Objeto persona que almacena la información de cada persona física
        o jurídica
    PersonDto:
      title: PersonDto
      type: object
      properties:
        _id:
          type: string
          format: objectId
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        birthDate:
          type: string
          format: date-time
        citizenCard:
          $ref: '#/components/schemas/CitizenCard'
        deleted:
          type: boolean
        deletedDate:
          type: string
          format: date-time
        email:
          type: string
        genre:
          $ref: '#/components/schemas/CrmParam'
        identificationDoc:
          type: string
        identificationType:
          $ref: '#/components/schemas/CrmParam'
        name:
          type: string
        personType:
          $ref: '#/components/schemas/CrmParam'
        phones:
          type: array
          items:
            type: string
        surname1:
          type: string
        surname2:
          type: string
    RecoverPasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
        userName:
          type: string
      description: Objeto para la restauración de contraseña
    Role:
      required:
      - _id
      - name
      - organizationalUnit
      - permissions
      type: object
      properties:
        _id:
          title: identificador del rol
          type: string
        name:
          title: Nombre del Rol
          type: string
          example: administracion de usuarios
        organizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
        permissions:
          $ref: '#/components/schemas/CrmPermissions'
      description: Rol de la aplicación
    RuleSet:
      required:
      - condition
      - rules
      type: object
      properties:
        condition:
          type: string
          description: indica la colección sobre la que hacer la query
        field:
          type: string
        operator:
          $ref: '#/components/schemas/Comparators'
        rules:
          type: array
          description: Reglas del ruleset;
          items:
            $ref: '#/components/schemas/RuleSet'
        value:
          type: string
      description: "Reglas de selección, pueden estar vacías"
    SearchResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AnyValue'
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    Segment:
      required:
      - _id
      - expirationTime
      - identificator
      - minThreshold
      - name
      - ruleSet
      type: object
      properties:
        _id:
          type: string
          format: objectId
        identificator:
          maxLength: 6
          type: string
          description: identificador corto del segmento
          example: USRTRA
        name:
          type: string
          description: Nombre del segmento
          example: Usuario de transporte público
        ruleSet:
          description: "Reglas para el establecimiento del segmento, podrá establecer\
            \ criterios en base a atributos de la persona"
          allOf:
          - $ref: '#/components/schemas/RuleSet'
        minThreshold:
          type: number
          description: umbral mínimo para considerar el segmento en una persona. Si
            no llega al umbral el segmento no se considera
        expirationTime:
          type: number
          description: "tiempo de expiración del segmento en días, si no se actualiza\
            \ el segmento con nuevas interacciones o solicitudes expirará"
      description: Segmentos de perfilado de personas. Definirán el perfil de la persona
        en base a interacciones y servicios utilizados
    SegmentItem:
      required:
      - _id
      - counter
      - expiration
      - lastUpdate
      - segment
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        segment:
          $ref: '#/components/schemas/Segment'
        counter:
          type: number
          description: Contador de ocurrencias del segmento
        lastUpdate:
          type: string
          description: última actualización del contador
          format: date-time
        expiresAt:
          type: string
          description: Fecha de expiración del segmento en la persona.
          format: date-time
      description: Elemento de segmento a establecer a una persona. Indicará el segmento
        establecido y los valores propios para la persona como un contador y la fecha
        de expiración del segmento que no será permanente
    ServiceResponseError:
      required:
      - message
      - status
      - timestamp
      type: object
      properties:
        status:
          type: string
          description: texto con el estado del error
        timestamp:
          type: string
        message:
          type: string
          description: mensaje de error
        debugMessage:
          type: string
          description: texto de depuración del error
        error:
          type: string
          description: error (opcional)
        path:
          type: string
          description: Endpoint que genera el error (opcional)
      description: Objeto de error retornado por la capa de servicios
      example:
        status: FORBIDDEN
        timestamp: 28-06-2021 10:08:31
        message: Acceso denegado
    Situation:
      required:
      - id
      - situationType
      - user
      type: object
      properties:
        _id:
          type: string
          description: del objectID se debería obtener el timestamp
          format: ObjectId
        situationType:
          $ref: '#/components/schemas/SituationType'
        user:
          $ref: '#/components/schemas/UserBasic'
      description: Situaciones para interacciones y solicitudes
    SituationType:
      required:
      - _id
      - code
      - description
      - finalState
      - organizationalUnitId
      - restrictedSuccessors
      - successors
      - systemSituationType
      - type
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        type:
          maxLength: 1
          minLength: 1
          type: string
          description: Tipo de situación
          example: I
        code:
          maxLength: 3
          minLength: 3
          type: number
          description: código de estado
          example: 124
        description:
          type: string
          example: Incidencia en el proceso de la solicitud
        organizationalUnitId:
          type: string
          description: "Id de la unidad organizativa que genera la situación, sólo\
            \ usuarios de esa uo podrán establecer esta situación. Puede ser nula\
            \ con lo cual la situación sería aplicable a todos"
          format: ObjectId
        finalState:
          type: boolean
          description: Indica si es un estado definitivo el cual provoca el cierre
            de la entidad a la que se aplica
        systemSituationType:
          type: boolean
          description: Indica si es una situación usada por el sistema por lo que
            no se podrá modificar ni eliminar.
        restrictedSuccessors:
          type: boolean
          description: indica si los sucesores están restringidos y sólo podrán ser
            aquellos incluidos en el array de sucesores
        successors:
          type: array
          description: "Situaciones que le pueden suceder, si el tipo de situació\
            n es definitiva no deberían suceder ninguna situación"
          items:
            $ref: '#/components/schemas/SituationType'
    Sort:
      title: Sort
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    SortMetadata:
      required:
      - field
      - order
      type: object
      properties:
        field:
          type: string
          description: Campo de ordenación
        order:
          type: number
          description: "Orden , 1 para ascendente  y  -1 para descendente"
      description: "Metadatos de ordenación de filtros, establece el criterio de ordenació\
        n de los resultados"
    SortMetadataBean:
      title: SortMetadataBean
      type: object
      properties:
        field:
          type: string
        order:
          type: integer
          format: int64
    Survey:
      required:
      - assessment
      - comment
      - sourceIp
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
          description: se establece al crearla en backend
          format: date-time
          readOnly: true
          example: 2017-07-21T17:32:28Z
        sourceIp:
          type: string
          description: "ip origen de la valoración, se establece desde backend"
          readOnly: true
          example: 192.168.1.5
        assessment:
          maximum: 10
          minimum: 0
          type: number
          description: Valoracion de la atención
          example: 7
        comment:
          type: string
          description: Comentario adicional a la valoración
          example: La atención a la solicitud ha sido buena pero el tiempo de respuesta
            podría mejorar
      description: Encuesta de satisfacción sobre el desarrollo de  una solicitud
        o a nivel general sobre un servicio
    TokenResponse:
      type: object
      properties:
        token_type:
          type: string
        access_token:
          type: string
          format: JWT
        appId:
          type: string
        expires_in:
          type: number
        refresh_token:
          type: string
      description: Respuesta a la solicitud de token de acceso o refresco
      example:
        token_type: bearer
        access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiVlx1MDAxNcKbwoNUwoonbFPCu8KhwrYiLCJpYXQiOjE0NDQyNjI1NDMsImV4cCI6MTQ0NDI2MjU2M30.MldruS1PvZaRZIJR4legQaauQ3_DYKxxP2rFnD37Ip4
        expires_in: 20
        refresh_token: fdb8fdbecf1d03ce5e6125c067733c0d51de209c
    User:
      required:
      - roles
      - userGroups
      type: object
      properties:
        password:
          type: string
          description: Contraseña en Base64
          format: byte
        organizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
        person:
          $ref: '#/components/schemas/Person'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/UsersGroup'
      description: Entidad que posibilita a una persona el uso de aplicaciones que
        componen la iniciativa. Define su método de autenticación y las autorizaciones
        de uso en el CRM.
      allOf:
      - $ref: '#/components/schemas/UserBasic'
    UserBasic:
      required:
      - _id
      - created
      - defaultDashboard
      - deleted
      - disabled
      - email
      - profileProvider
      - username
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          example: 487f1ff7cbcf86cd799439011
        username:
          type: string
          example: user2548
        email:
          type: string
          example: user2548@santander.es
        profileProvider:
          type: string
          description: Servicio proveedor origen del perfil
          example: LDAP
        citizen:
          type: boolean
          description: indica si es un usuario ciudadano
          example: true
        disabled:
          type: boolean
          example: false
        defaultDashboard:
          $ref: '#/components/schemas/Dashboard'
        created:
          type: string
          description: timestamp UNIX
          format: date
        deleted:
          type: string
          description: timestamp UNIX
          format: date
      description: "Extracto de usuario con las propiedades reducidas, omite persona\
        \ y contraseña."
    UserDto:
      title: UserDto
      type: object
      properties:
        _id:
          type: string
          format: objectId
        created:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
        disabled:
          type: boolean
        email:
          type: string
        person:
          $ref: '#/components/schemas/PersonDto'
        username:
          type: string
    UserRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        personId:
          type: string
          format: ObjectId
      description: Objeto para la creación de un nuevo usuario. Creará el usuario
        con el nombre de usuario y el mail indicados y establecerá la contraseña.
        Este usuario quedará vinculado a la persona indicada por personId
    UsersGroup:
      required:
      - _id
      - description
      - name
      - roles
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
          example: 507f1f77bcf86cd799439011
        name:
          type: string
          description: Nombre del grupo
          example: Grupo de usuarios de 010
        description:
          type: string
          description: Descripción del grupo
          example: Grupo con permisos especiales de acceso solo lectura a ciudadanos
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
      description: Grupos de usuarios
    UserDashboard:
      required:
      - _id
      - dashboardConfiguration
      - dashboardId
      type: object
      properties:
        _id:
          type: string
          description: Id del usuario del detalle de una configuración
          format: ObjectId
          example: 507f1f77bcf86cd799439011
        dashboardId:
          type: string
          description: Id del dashboard
          format: ObjectId
          example: 507f1f77bcf86cd799439011
        dashboardConfiguration:
          $ref: '#/components/schemas/DashboardConfiguration'
      description: Dashboard de un usuarios. Es la combinación entre un dashboard
        y la configuracion del usuario para ese dashboard. Permite a los usuarios
        personalizar un dashboard
    Widget:
      required:
      - _id
      - description
      - name
      - organizationalUnits
      - userOwnerId
      - widgetType
      type: object
      properties:
        _id:
          type: string
          format: ObjectId
        name:
          type: string
        description:
          type: string
        widgetType:
          type: string
          description: discriminador tipo de widget
          enum:
          - chart
          - indicator
          - table
        userOwnerId:
          type: string
          format: ObjectId
        organizationalUnits:
          type: array
          description: unidades organizativas a las que se permite el uso del widget.
            Los datos obtenidos dependerán del datasource configurado en el widget
          items:
            $ref: '#/components/schemas/OrganizationalUnit'
      discriminator:
        propertyName: widgetType
    WidgetChart:
      example:
        _id: 507f1f77bcf86cd799439011
        name: Grafica prueba 1
        description: ' Grafica mock de prueba'
        widgetType: chart
        userOwnerId: 607db9f58dd6ad2628203eac
        privateWidget: true
        chartType: bar
        legendPosition: top
        showGraphTitle: true
        graphTitle: Título del gráfico
        showGrid: true
        showAxis: true
        xAxisTitle: Meses
        yAxisTitle: Totales
        xAxisLabels:
        - enero
        - febrero
        - marzo
        series: []
      allOf:
      - $ref: '#/components/schemas/Widget'
      - required:
        - chartType
        - graphTitle
        - legendPosition
        - series
        - showAxis
        - showGraphTitle
        - showGrid
        - xAxisLabels
        - xAxisTitle
        - yAxisTitle
        type: object
        properties:
          chartType:
            type: string
            description: tipo de gráfica
            enum:
            - bar
            - doughnut
            - line
            - polararea
            - pie
            - radar
          legendPosition:
            type: string
          showGraphTitle:
            type: boolean
          graphTitle:
            type: string
          showGrid:
            type: boolean
          showAxis:
            type: boolean
          xAxisTitle:
            type: string
          yAxisTitle:
            type: string
          xAxisLabels:
            type: array
            items:
              type: string
          series:
            type: array
            items:
              $ref: '#/components/schemas/DataSerie'
    WidgetIndicator:
      allOf:
      - $ref: '#/components/schemas/Widget'
      - required:
        - indicatorTitle
        - serie
        type: object
        properties:
          indicatorTitle:
            type: string
          serie:
            $ref: '#/components/schemas/DataSerie'
    WidgetTable:
      allOf:
      - $ref: '#/components/schemas/Widget'
      - required:
        - columns
        - title
        type: object
        properties:
          title:
            type: string
          datasource:
            $ref: '#/components/schemas/DataSource'
          columns:
            type: array
            description: columnas a mostrar en el widget
            items:
              type: string
    id_contacts_body:
      type: object
      properties:
        fileName:
          type: string
          format: binary
    faqs_files_body:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        fileName:
          type: string
          format: binary
    inline_response_200:
      allOf:
      - $ref: '#/components/schemas/FilterResponse'
      - type: object
        properties:
          results:
            type: array
            items:
              $ref: '#/components/schemas/Person'
    Campaign_fieldsMap:
      type: object
      properties:
        templateFieldName:
          type: string
        datasourceFieldName:
          type: string
  responses:
    Ok:
      description: Success
    NoContent:
      description: La petición se ha completado con éxito pero su respuesta no tiene
        ningún contenido (la respuesta puede incluir información en sus cabeceras
        HTTP).
    Created:
      description: La petición ha sido completada y ha resultado en la creación de
        un nuevo recurso.
    InvalidID:
      description: Invalid Path ID
    InvalidRequestBody:
      description: "El servidor no procesará la solicitud, porque no puede, o no debe,\
        \ debido a algo que es percibido como un error del cliente ej-> solicitud\
        \ malformada, sintaxis errónea, etc). La solicitud contiene sintaxis erró\
        nea y no debería repetirse."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceResponseError'
    NotFound:
      description: Resource Not found
    UnauthorizedError:
      description: "ApiKey is missing or invalid. Similar al 403 Forbidden, pero especí\
        ficamente para su uso cuando la autentificación es posible pero ha fallado\
        \ o aún no ha sido provista"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceResponseError'
    ForbiddenError:
      description: "La solicitud fue legal, pero el servidor rehúsa responderla dado\
        \ que el cliente no tiene los privilegios para realizarla. En contraste a\
        \ una respuesta 401 No autorizado, autenticarse previamente no va a cambiar\
        \ la respuesta."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceResponseError'
  parameters:
    apiKey:
      name: apiKey
      in: header
      description: (Obligatoria si no se dispone de token)
      required: false
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    PersonRequest:
      description: objeto persona
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Person'
      required: true
    CitizenCardRequest:
      description: Objeto para la solicitud de creación o actualización de tarjeta
      content:
        application/json:
          schema:
            additionalProperties: false
            allOf:
            - $ref: '#/components/schemas/CitizenCard'
            - required:
              - personId
              type: object
              properties:
                personId:
                  type: string
      required: true
    UserRequest:
      description: Objeto para la solicitud de creación o actualización de Usuario
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRequest'
      required: true
  securitySchemes:
    BearerToken:
      type: http
      description: Token obtenido en el proceso de login
      scheme: bearer
      bearerFormat: JWT
    ApiKey:
      type: apiKey
      description: ApiKey de aplicación de terceros
      name: X-API-Key
      in: header
